

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Thu Sep 19 15:25:48 2019

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F46J50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    19                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    20                           	psect	text0,global,reloc=2,class=CODE,delta=1
    21                           	psect	text1,global,reloc=2,class=CODE,delta=1
    22                           	psect	text2,global,reloc=2,class=CODE,delta=1
    23                           	psect	text3,global,reloc=2,class=CODE,delta=1
    24                           	psect	text4,global,reloc=2,class=CODE,delta=1
    25                           	psect	text5,global,reloc=2,class=CODE,delta=1
    26                           	psect	text6,global,reloc=2,class=CODE,delta=1
    27                           	psect	text7,global,reloc=2,class=CODE,delta=1
    28                           	psect	text8,global,reloc=2,class=CODE,delta=1
    29                           	psect	text9,global,reloc=2,class=CODE,delta=1
    30                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    32                           	psect	text12,global,reloc=2,class=CODE,delta=1
    33                           	psect	text13,global,reloc=2,class=CODE,delta=1
    34                           	psect	text14,global,reloc=2,class=CODE,delta=1
    35                           	psect	text15,global,reloc=2,class=CODE,delta=1
    36                           	psect	text16,global,reloc=2,class=CODE,delta=1
    37                           	psect	text17,global,reloc=2,class=CODE,delta=1
    38                           	psect	text18,global,reloc=2,class=CODE,delta=1
    39                           	psect	text19,global,reloc=2,class=CODE,delta=1
    40                           	psect	text20,global,reloc=2,class=CODE,delta=1
    41                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    42                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    43                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    44  0000                     
    45                           ; Version 1.45
    46                           ; Generated 16/11/2017 GMT
    47                           ; 
    48                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    49                           ; All rights reserved.
    50                           ; 
    51                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    52                           ; 
    53                           ; Redistribution and use in source and binary forms, with or without modification, are
    54                           ; permitted provided that the following conditions are met:
    55                           ; 
    56                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    57                           ;        conditions and the following disclaimer.
    58                           ; 
    59                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    60                           ;        of conditions and the following disclaimer in the documentation and/or other
    61                           ;        materials provided with the distribution.
    62                           ; 
    63                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    64                           ;        software without specific prior written permission.
    65                           ; 
    66                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    67                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    68                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    69                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    70                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    71                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    72                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    73                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    74                           ; 
    75                           ; 
    76                           ; Code-generator required, PIC18F46J50 Definitions
    77                           ; 
    78                           ; SFR Addresses
    79  0000                     
    80                           	psect	idataCOMRAM
    81  00159C                     __pidataCOMRAM:
    82                           	opt stack 0
    83                           
    84                           ;initializer for _BankIndex
    85  00159C  FF                 	db	255
    86                           
    87                           ;initializer for _defaultHops
    88  00159D  04                 	db	4
    89                           
    90                           	psect	idataBANK0
    91  0015A0                     __pidataBANK0:
    92                           	opt stack 0
    93                           
    94                           ;initializer for _AcknowledgementSeq
    95  0015A0  FF                 	db	255
    96                           
    97                           	psect	idataBANK1
    98  001594                     __pidataBANK1:
    99                           	opt stack 0
   100                           
   101                           ;initializer for _myLongAddress
   102  001594  AF                 	db	175
   103  001595  11                 	db	17
   104  001596  22                 	db	34
   105  001597  33                 	db	51
   106  001598  44                 	db	68
   107  001599  55                 	db	85
   108  00159A  66                 	db	102
   109  00159B  11                 	db	17
   110                           
   111                           	psect	smallconst
   112  000F00                     __psmallconst:
   113                           	opt stack 0
   114  000F00  00                 	db	0
   115  000F01                     _ScanTime:
   116                           	opt stack 0
   117  000F01  03C0               	dw	960
   118  000F03  0000               	dw	0
   119  000F05  05A0               	dw	1440
   120  000F07  0000               	dw	0
   121  000F09  0960               	dw	2400
   122  000F0B  0000               	dw	0
   123  000F0D  10E0               	dw	4320
   124  000F0F  0000               	dw	0
   125  000F11  1FE0               	dw	8160
   126  000F13  0000               	dw	0
   127  000F15  3DE0               	dw	15840
   128  000F17  0000               	dw	0
   129  000F19  79E0               	dw	31200
   130  000F1B  0000               	dw	0
   131  000F1D  F1E0               	dw	61920
   132  000F1F  0000               	dw	0
   133  000F21  E1E0               	dw	57824
   134  000F23  0001               	dw	1
   135  000F25  C1E0               	dw	49632
   136  000F27  0003               	dw	3
   137  000F29  81E0               	dw	33248
   138  000F2B  0007               	dw	7
   139  000F2D  01E0               	dw	480
   140  000F2F  000F               	dw	15
   141  000F31  01E0               	dw	480
   142  000F33  001E               	dw	30
   143  000F35  3D44               	dw	15684
   144  000F37  001B               	dw	27
   145  000F39  B40D               	dw	46093
   146  000F3B  0015               	dw	21
   147  000F3D                     __end_of_ScanTime:
   148                           	opt stack 0
   149  000F3D                     _octpowers:
   150                           	opt stack 0
   151  000F3D  0001               	dw	1
   152  000F3F  0008               	dw	8
   153  000F41  0040               	dw	64
   154  000F43  0200               	dw	512
   155  000F45  1000               	dw	4096
   156  000F47  8000               	dw	32768
   157  000F49                     __end_of_octpowers:
   158                           	opt stack 0
   159  000F49                     _dpowers:
   160                           	opt stack 0
   161  000F49  0001               	dw	1
   162  000F4B  000A               	dw	10
   163  000F4D  0064               	dw	100
   164  000F4F  03E8               	dw	1000
   165  000F51  2710               	dw	10000
   166  000F53                     __end_of_dpowers:
   167                           	opt stack 0
   168  000F53                     _hexpowers:
   169                           	opt stack 0
   170  000F53  0001               	dw	1
   171  000F55  0010               	dw	16
   172  000F57  0100               	dw	256
   173  000F59  1000               	dw	4096
   174  000F5B                     __end_of_hexpowers:
   175                           	opt stack 0
   176  0000                     _RPOR17	set	3799
   177  0000                     _RPINR16	set	3830
   178  0000                     _RPINR1	set	3815
   179  0000                     _PPSCONbits	set	3839
   180  0000                     _ANCON1	set	3913
   181  0000                     _ANCON0	set	3912
   182  0000                     _TXREG2	set	4009
   183  0000                     _TXSTA2bits	set	4008
   184  0000                     _RCREG2	set	4010
   185  0000                     _RCSTA2bits	set	3996
   186  0000                     _RCSTA1bits	set	4012
   187  0000                     _RCSTA2	set	3996
   188  0000                     _TXSTA2	set	4008
   189  0000                     _SPBRG2	set	4011
   190  0000                     _SPBRGH2	set	3965
   191  0000                     _BAUDCON1bits	set	3966
   192  0000                     _TMR0L	set	4054
   193  0000                     _INTCON3bits	set	4080
   194  0000                     _LATCbits	set	3979
   195  0000                     _SSP1CON1	set	4038
   196  0000                     _SSP1STAT	set	4039
   197  0000                     _TRISCbits	set	3988
   198  0000                     _LATDbits	set	3980
   199  0000                     _TRISDbits	set	3989
   200  0000                     _LATBbits	set	3978
   201  0000                     _TRISAbits	set	3986
   202  0000                     _TRISBbits	set	3987
   203  0000                     _LATE	set	3981
   204  0000                     _LATD	set	3980
   205  0000                     _LATB	set	3978
   206  0000                     _LATA	set	3977
   207  0000                     _TRISE	set	3990
   208  0000                     _TRISC	set	3988
   209  0000                     _TRISB	set	3987
   210  0000                     _TRISA	set	3986
   211  0000                     _INTCON2bits	set	4081
   212  0000                     _EECON2	set	4007
   213  0000                     _INTCON	set	4082
   214  0000                     _OSCTUNEbits	set	3995
   215  0000                     _WDTCONbits	set	4032
   216  0000                     _OSCCON	set	4051
   217  0000                     _TMR1H	set	4047
   218  0000                     _TMR1L	set	4046
   219  0000                     _T1CONbits	set	4045
   220  0000                     _PIE1bits	set	3997
   221  0000                     _T1CON	set	4045
   222  0000                     _SSP2CON1bits	set	3954
   223  0000                     _SSP1CON1bits	set	4038
   224  0000                     _SSP1BUF	set	4041
   225  0000                     _PIR1bits	set	3998
   226  0000                     _INTCONbits	set	4082
   227  0000                     _PIE3bits	set	4003
   228  0000                     _SSP2CON2	set	3953
   229  0000                     _SSP2CON1	set	3954
   230  0000                     _SSP2ADD	set	3956
   231  0000                     _SSP2STAT	set	3955
   232  0000                     _PIR3bits	set	4004
   233  0000                     _TRISD	set	3989
   234  0000                     _SSP2BUF	set	3957
   235  0000                     _SSP2CON2bits	set	3953
   236  0000                     _PORTBbits	set	3969
   237  000F5B  30                 	db	48	;'0'
   238  000F5C  31                 	db	49	;'1'
   239  000F5D  32                 	db	50	;'2'
   240  000F5E  33                 	db	51	;'3'
   241  000F5F  34                 	db	52	;'4'
   242  000F60  35                 	db	53	;'5'
   243  000F61  36                 	db	54	;'6'
   244  000F62  37                 	db	55	;'7'
   245  000F63  38                 	db	56	;'8'
   246  000F64  39                 	db	57	;'9'
   247  000F65  41                 	db	65	;'A'
   248  000F66  42                 	db	66	;'B'
   249  000F67  43                 	db	67	;'C'
   250  000F68  44                 	db	68	;'D'
   251  000F69  45                 	db	69	;'E'
   252  000F6A  46                 	db	70	;'F'
   253  000F6B  00                 	db	0
   254  000F6C  30                 	db	48	;'0'
   255  000F6D  31                 	db	49	;'1'
   256  000F6E  32                 	db	50	;'2'
   257  000F6F  33                 	db	51	;'3'
   258  000F70  34                 	db	52	;'4'
   259  000F71  35                 	db	53	;'5'
   260  000F72  36                 	db	54	;'6'
   261  000F73  37                 	db	55	;'7'
   262  000F74  38                 	db	56	;'8'
   263  000F75  39                 	db	57	;'9'
   264  000F76  61                 	db	97	;'a'
   265  000F77  62                 	db	98	;'b'
   266  000F78  63                 	db	99	;'c'
   267  000F79  64                 	db	100	;'d'
   268  000F7A  65                 	db	101	;'e'
   269  000F7B  66                 	db	102	;'f'
   270  000F7C  00                 	db	0
   271  000F7D  52                 	db	82	;'R'
   272  000F7E  58                 	db	88	;'X'
   273  000F7F  20                 	db	32
   274  000F80  4D                 	db	77	;'M'
   275  000F81  65                 	db	101	;'e'
   276  000F82  73                 	db	115	;'s'
   277  000F83  73                 	db	115	;'s'
   278  000F84  61                 	db	97	;'a'
   279  000F85  67                 	db	103	;'g'
   280  000F86  65                 	db	101	;'e'
   281  000F87  73                 	db	115	;'s'
   282  000F88  3A                 	db	58	;':'
   283  000F89  20                 	db	32
   284  000F8A  25                 	db	37
   285  000F8B  33                 	db	51	;'3'
   286  000F8C  64                 	db	100	;'d'
   287  000F8D  00                 	db	0
   288  000F8E  54                 	db	84	;'T'
   289  000F8F  58                 	db	88	;'X'
   290  000F90  20                 	db	32
   291  000F91  4D                 	db	77	;'M'
   292  000F92  65                 	db	101	;'e'
   293  000F93  73                 	db	115	;'s'
   294  000F94  73                 	db	115	;'s'
   295  000F95  61                 	db	97	;'a'
   296  000F96  67                 	db	103	;'g'
   297  000F97  65                 	db	101	;'e'
   298  000F98  73                 	db	115	;'s'
   299  000F99  3A                 	db	58	;':'
   300  000F9A  20                 	db	32
   301  000F9B  25                 	db	37
   302  000F9C  33                 	db	51	;'3'
   303  000F9D  64                 	db	100	;'d'
   304  000F9E  00                 	db	0
   305  000F9F                     STR_3:
   306  000F9F  44                 	db	68	;'D'
   307  000FA0  E9                 	db	-23
   308  000FA1  62                 	db	98	;'b'
   309  000FA2  75                 	db	117	;'u'
   310  000FA3  74                 	db	116	;'t'
   311  000FA4  00                 	db	0
   312  000FA5                     STR_4:
   313  000FA5  54                 	db	84	;'T'
   314  000FA6  65                 	db	101	;'e'
   315  000FA7  73                 	db	115	;'s'
   316  000FA8  74                 	db	116	;'t'
   317  000FA9  00                 	db	0
   318                           
   319                           ; #config settings
   320  000FAA  00                 	db	0	; dummy byte at the end
   321  0000                     
   322                           	psect	cinit
   323  00105C                     __pcinit:
   324                           	opt stack 0
   325  00105C                     start_initialization:
   326                           	opt stack 0
   327  00105C                     __initialization:
   328                           	opt stack 0
   329                           
   330                           ; Initialize objects allocated to BANK1 (8 bytes)
   331                           ; load TBLPTR registers with __pidataBANK1
   332  00105C  0E94               	movlw	low __pidataBANK1
   333  00105E  6EF6               	movwf	tblptrl,c
   334  001060  0E15               	movlw	high __pidataBANK1
   335  001062  6EF7               	movwf	tblptrh,c
   336  001064  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   337  001066  6EF8               	movwf	tblptru,c
   338  001068  EE01  F09C         	lfsr	0,__pdataBANK1
   339  00106C  EE10 F008          	lfsr	1,8
   340  001070                     copy_data0:
   341  001070  0009               	tblrd		*+
   342  001072  CFF5 FFEE          	movff	tablat,postinc0
   343  001076  50E5               	movf	postdec1,w,c
   344  001078  50E1               	movf	fsr1l,w,c
   345  00107A  E1FA               	bnz	copy_data0
   346                           
   347                           ; Initialize objects allocated to BANK0 (1 bytes)
   348                           ; load TBLPTR registers with __pidataBANK0
   349  00107C  0EA0               	movlw	low __pidataBANK0
   350  00107E  6EF6               	movwf	tblptrl,c
   351  001080  0E15               	movlw	high __pidataBANK0
   352  001082  6EF7               	movwf	tblptrh,c
   353  001084  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   354  001086  6EF8               	movwf	tblptru,c
   355  001088  0009               	tblrd		*+	;fetch initializer
   356  00108A  CFF5 F0FC          	movff	tablat,__pdataBANK0
   357                           
   358                           ; Initialize objects allocated to COMRAM (2 bytes)
   359                           ; load TBLPTR registers with __pidataCOMRAM
   360  00108E  0E9C               	movlw	low __pidataCOMRAM
   361  001090  6EF6               	movwf	tblptrl,c
   362  001092  0E15               	movlw	high __pidataCOMRAM
   363  001094  6EF7               	movwf	tblptrh,c
   364  001096  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   365  001098  6EF8               	movwf	tblptru,c
   366  00109A  0009               	tblrd		*+	;fetch initializer
   367  00109C  CFF5 F05B          	movff	tablat,__pdataCOMRAM
   368  0010A0  0009               	tblrd		*+	;fetch initializer
   369  0010A2  CFF5 F05C          	movff	tablat,__pdataCOMRAM+1
   370                           
   371                           ; Clear objects allocated to BANK3 (140 bytes)
   372  0010A6  EE03  F000         	lfsr	0,__pbssBANK3
   373  0010AA  0E8C               	movlw	140
   374  0010AC                     clear_0:
   375  0010AC  6AEE               	clrf	postinc0,c
   376  0010AE  06E8               	decf	wreg,f,c
   377  0010B0  E1FD               	bnz	clear_0
   378                           
   379                           ; Clear objects allocated to BANK2 (160 bytes)
   380  0010B2  EE02  F000         	lfsr	0,__pbssBANK2
   381  0010B6  0EA0               	movlw	160
   382  0010B8                     clear_1:
   383  0010B8  6AEE               	clrf	postinc0,c
   384  0010BA  06E8               	decf	wreg,f,c
   385  0010BC  E1FD               	bnz	clear_1
   386                           
   387                           ; Clear objects allocated to BANK1 (156 bytes)
   388  0010BE  EE01  F000         	lfsr	0,__pbssBANK1
   389  0010C2  0E9C               	movlw	156
   390  0010C4                     clear_2:
   391  0010C4  6AEE               	clrf	postinc0,c
   392  0010C6  06E8               	decf	wreg,f,c
   393  0010C8  E1FD               	bnz	clear_2
   394                           
   395                           ; Clear objects allocated to BANK0 (138 bytes)
   396  0010CA  EE00  F060         	lfsr	0,__pbssBANK0
   397  0010CE  0E8A               	movlw	138
   398  0010D0                     clear_3:
   399  0010D0  6AEE               	clrf	postinc0,c
   400  0010D2  06E8               	decf	wreg,f,c
   401  0010D4  E1FD               	bnz	clear_3
   402                           
   403                           ; Clear objects allocated to COMRAM (44 bytes)
   404  0010D6  EE00  F02F         	lfsr	0,__pbssCOMRAM
   405  0010DA  0E2C               	movlw	44
   406  0010DC                     clear_4:
   407  0010DC  6AEE               	clrf	postinc0,c
   408  0010DE  06E8               	decf	wreg,f,c
   409  0010E0  E1FD               	bnz	clear_4
   410  0010E2                     end_of_initialization:
   411                           	opt stack 0
   412  0010E2                     __end_of__initialization:
   413                           	opt stack 0
   414  0010E2  905D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   415  0010E4  925D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   416  0010E6  0E00               	movlw	low (__Lmediumconst shr (0+16))
   417  0010E8  6EF8               	movwf	tblptru,c
   418  0010EA  0100               	movlb	0
   419  0010EC  EF47  F00A         	goto	_main	;jump to C main() function
   420                           tblptru	equ	0xFF8
   421                           tblptrh	equ	0xFF7
   422                           tblptrl	equ	0xFF6
   423                           tablat	equ	0xFF5
   424                           postinc0	equ	0xFEE
   425                           wreg	equ	0xFE8
   426                           postdec1	equ	0xFE5
   427                           fsr1l	equ	0xFE1
   428                           
   429                           	psect	bssCOMRAM
   430  00002F                     __pbssCOMRAM:
   431                           	opt stack 0
   432  00002F                     _MACRxPacket:
   433                           	opt stack 0
   434  00002F                     	ds	11
   435  00003A                     _MTP:
   436                           	opt stack 0
   437  00003A                     	ds	7
   438  000041                     _MiWiStateMachine:
   439                           	opt stack 0
   440  000041                     	ds	2
   441  000043                     _MRF24J40Status:
   442                           	opt stack 0
   443  000043                     	ds	1
   444  000044                     _role:
   445                           	opt stack 0
   446  000044                     	ds	1
   447  000045                     _MiWiSeqNum:
   448                           	opt stack 0
   449  000045                     	ds	1
   450  000046                     _myParent:
   451                           	opt stack 0
   452  000046                     	ds	1
   453  000047                     _TxData:
   454                           	opt stack 0
   455  000047                     	ds	1
   456  000048                     _tempNodeStatus:
   457                           	opt stack 0
   458  000048                     	ds	1
   459  000049                     _ActiveScanResultIndex:
   460                           	opt stack 0
   461  000049                     	ds	1
   462  00004A                     _ConnMode:
   463                           	opt stack 0
   464  00004A                     	ds	1
   465  00004B                     _timerExtension1:
   466                           	opt stack 0
   467  00004B                     	ds	1
   468  00004C                     _TextPtr:
   469                           	opt stack 0
   470  00004C                     	ds	1
   471  00004D                     _CommandPtr:
   472                           	opt stack 0
   473  00004D                     	ds	1
   474  00004E                     _TextLen:
   475                           	opt stack 0
   476  00004E                     	ds	1
   477  00004F                     _CommandLen:
   478                           	opt stack 0
   479  00004F                     	ds	1
   480  000050                     _myNetworkAddress:
   481                           	opt stack 0
   482  000050                     	ds	2
   483  000052                     _MAC_PANID:
   484                           	opt stack 0
   485  000052                     	ds	2
   486  000054                     _myPANID:
   487                           	opt stack 0
   488  000054                     	ds	2
   489  000056                     _myShortAddress:
   490                           	opt stack 0
   491  000056                     	ds	2
   492  000058                     _tempShortAddress:
   493                           	opt stack 0
   494  000058                     	ds	2
   495  00005A                     _currentChannel:
   496                           	opt stack 0
   497  00005A                     	ds	1
   498                           tblptru	equ	0xFF8
   499                           tblptrh	equ	0xFF7
   500                           tblptrl	equ	0xFF6
   501                           tablat	equ	0xFF5
   502                           postinc0	equ	0xFEE
   503                           wreg	equ	0xFE8
   504                           postdec1	equ	0xFE5
   505                           fsr1l	equ	0xFE1
   506                           
   507                           	psect	dataCOMRAM
   508  00005B                     __pdataCOMRAM:
   509                           	opt stack 0
   510  00005B                     _BankIndex:
   511                           	opt stack 0
   512  00005B                     	ds	1
   513  00005C                     _defaultHops:
   514                           	opt stack 0
   515  00005C                     	ds	1
   516                           tblptru	equ	0xFF8
   517                           tblptrh	equ	0xFF7
   518                           tblptrl	equ	0xFF6
   519                           tablat	equ	0xFF5
   520                           postinc0	equ	0xFEE
   521                           wreg	equ	0xFE8
   522                           postdec1	equ	0xFE5
   523                           fsr1l	equ	0xFE1
   524                           
   525                           	psect	bssBANK0
   526  000060                     __pbssBANK0:
   527                           	opt stack 0
   528  000060                     _rxMessage:
   529                           	opt stack 0
   530  000060                     	ds	10
   531  00006A                     _RouterFailures:
   532                           	opt stack 0
   533  00006A                     	ds	8
   534  000072                     _RoutingTable:
   535                           	opt stack 0
   536  000072                     	ds	8
   537  00007A                     _tempLongAddress:
   538                           	opt stack 0
   539  00007A                     	ds	8
   540  000082                     _LCDCommand:
   541                           	opt stack 0
   542  000082                     	ds	4
   543  000086                     _switch1PressTime:
   544                           	opt stack 0
   545  000086                     	ds	4
   546  00008A                     _switch0PressTime:
   547                           	opt stack 0
   548  00008A                     	ds	4
   549  00008E                     _MACInitParams:
   550                           	opt stack 0
   551  00008E                     	ds	3
   552  000091                     _failureCounter:
   553                           	opt stack 0
   554  000091                     	ds	2
   555  000093                     _AcknowledgementAddr:
   556                           	opt stack 0
   557  000093                     	ds	2
   558  000095                     _MACCurrentChannel:
   559                           	opt stack 0
   560  000095                     	ds	1
   561  000096                     _IEEESeqNum:
   562                           	opt stack 0
   563  000096                     	ds	1
   564  000097                     _knownCoordinators:
   565                           	opt stack 0
   566  000097                     	ds	1
   567  000098                     _MiWiAckRequired:
   568                           	opt stack 0
   569  000098                     	ds	1
   570  000099                     _MiWiCapacityInfo:
   571                           	opt stack 0
   572  000099                     	ds	1
   573  00009A                     _timerExtension2:
   574                           	opt stack 0
   575  00009A                     	ds	1
   576  00009B                     _TxBuffer:
   577                           	opt stack 0
   578  00009B                     	ds	51
   579  0000CE                     _openSocketInfo:
   580                           	opt stack 0
   581  0000CE                     	ds	26
   582  0000E8                     _tempPANID:
   583                           	opt stack 0
   584  0000E8                     	ds	2
   585                           tblptru	equ	0xFF8
   586                           tblptrh	equ	0xFF7
   587                           tblptrl	equ	0xFF6
   588                           tablat	equ	0xFF5
   589                           postinc0	equ	0xFEE
   590                           wreg	equ	0xFE8
   591                           postdec1	equ	0xFE5
   592                           fsr1l	equ	0xFE1
   593                           
   594                           	psect	dataBANK0
   595  0000FC                     __pdataBANK0:
   596                           	opt stack 0
   597  0000FC                     _AcknowledgementSeq:
   598                           	opt stack 0
   599  0000FC                     	ds	1
   600                           tblptru	equ	0xFF8
   601                           tblptrh	equ	0xFF7
   602                           tblptrl	equ	0xFF6
   603                           tablat	equ	0xFF5
   604                           postinc0	equ	0xFEE
   605                           wreg	equ	0xFE8
   606                           postdec1	equ	0xFE5
   607                           fsr1l	equ	0xFE1
   608                           
   609                           	psect	bssBANK1
   610  000100                     __pbssBANK1:
   611                           	opt stack 0
   612  000100                     _BroadcastRecords:
   613                           	opt stack 0
   614  000100                     	ds	32
   615  000120                     _ConnectionTable:
   616                           	opt stack 0
   617  000120                     	ds	91
   618  00017B                     _LCDText:
   619                           	opt stack 0
   620  00017B                     	ds	33
   621                           tblptru	equ	0xFF8
   622                           tblptrh	equ	0xFF7
   623                           tblptrl	equ	0xFF6
   624                           tablat	equ	0xFF5
   625                           postinc0	equ	0xFEE
   626                           wreg	equ	0xFE8
   627                           postdec1	equ	0xFE5
   628                           fsr1l	equ	0xFE1
   629                           
   630                           	psect	dataBANK1
   631  00019C                     __pdataBANK1:
   632                           	opt stack 0
   633  00019C                     _myLongAddress:
   634                           	opt stack 0
   635  00019C                     	ds	8
   636                           tblptru	equ	0xFF8
   637                           tblptrh	equ	0xFF7
   638                           tblptrl	equ	0xFF6
   639                           tablat	equ	0xFF5
   640                           postinc0	equ	0xFEE
   641                           wreg	equ	0xFE8
   642                           postdec1	equ	0xFE5
   643                           fsr1l	equ	0xFE1
   644                           
   645                           	psect	bssBANK2
   646  000200                     __pbssBANK2:
   647                           	opt stack 0
   648  000200                     _RxBuffer:
   649                           	opt stack 0
   650  000200                     	ds	160
   651                           tblptru	equ	0xFF8
   652                           tblptrh	equ	0xFF7
   653                           tblptrl	equ	0xFF6
   654                           tablat	equ	0xFF5
   655                           postinc0	equ	0xFEE
   656                           wreg	equ	0xFE8
   657                           postdec1	equ	0xFE5
   658                           fsr1l	equ	0xFE1
   659                           
   660                           	psect	bssBANK3
   661  000300                     __pbssBANK3:
   662                           	opt stack 0
   663  000300                     _ActiveScanResults:
   664                           	opt stack 0
   665  000300                     	ds	140
   666                           tblptru	equ	0xFF8
   667                           tblptrh	equ	0xFF7
   668                           tblptrl	equ	0xFF6
   669                           tablat	equ	0xFF5
   670                           postinc0	equ	0xFEE
   671                           wreg	equ	0xFE8
   672                           postdec1	equ	0xFE5
   673                           fsr1l	equ	0xFE1
   674                           
   675                           	psect	cstackBANK0
   676  0000EA                     __pcstackBANK0:
   677                           	opt stack 0
   678  0000EA                     ?___lmul:
   679                           	opt stack 0
   680  0000EA                     I2CWrite@BufferLen:
   681                           	opt stack 0
   682  0000EA                     uartWrite@c:
   683                           	opt stack 0
   684  0000EA                     ___lmul@multiplier:
   685                           	opt stack 0
   686                           
   687                           ; 4 bytes @ 0x0
   688  0000EA                     	ds	1
   689  0000EB                     I2CWrite@Commandlen:
   690                           	opt stack 0
   691  0000EB                     uartRead@val:
   692                           	opt stack 0
   693  0000EB                     __uartPrint@str:
   694                           	opt stack 0
   695                           
   696                           ; 2 bytes @ 0x1
   697  0000EB                     	ds	2
   698  0000ED                     ??__uartPrint:
   699                           
   700                           ; 1 bytes @ 0x3
   701  0000ED                     	ds	1
   702  0000EE                     ___lmul@multiplicand:
   703                           	opt stack 0
   704                           
   705                           ; 4 bytes @ 0x4
   706  0000EE                     	ds	1
   707  0000EF                     __uartPrint@i:
   708                           	opt stack 0
   709                           
   710                           ; 2 bytes @ 0x5
   711  0000EF                     	ds	3
   712  0000F2                     ___lmul@product:
   713                           	opt stack 0
   714                           
   715                           ; 4 bytes @ 0x8
   716  0000F2                     	ds	4
   717  0000F6                     DELAY_ms@ms:
   718                           	opt stack 0
   719                           
   720                           ; 2 bytes @ 0xC
   721  0000F6                     	ds	2
   722  0000F8                     DELAY_ms@cyclesRequiredForEntireDelay:
   723                           	opt stack 0
   724                           
   725                           ; 4 bytes @ 0xE
   726  0000F8                     	ds	4
   727  0000FC                     tblptru	equ	0xFF8
   728                           tblptrh	equ	0xFF7
   729                           tblptrl	equ	0xFF6
   730                           tablat	equ	0xFF5
   731                           postinc0	equ	0xFEE
   732                           wreg	equ	0xFE8
   733                           postdec1	equ	0xFE5
   734                           fsr1l	equ	0xFE1
   735                           
   736                           ; 1 bytes @ 0x12
   737                           
   738                           	psect	cstackCOMRAM
   739  000001                     __pcstackCOMRAM:
   740                           	opt stack 0
   741  000001                     ?i2___lmul:
   742                           	opt stack 0
   743  000001                     SPIPut@i:
   744                           	opt stack 0
   745  000001                     i2___lmul@multiplier:
   746                           	opt stack 0
   747                           
   748                           ; 4 bytes @ 0x0
   749  000001                     	ds	1
   750  000002                     SPIPut@v:
   751                           	opt stack 0
   752                           
   753                           ; 1 bytes @ 0x1
   754  000002                     	ds	1
   755  000003                     PHYSetShortRAMAddr@value:
   756                           	opt stack 0
   757  000003                     PHYGetShortRAMAddr@address:
   758                           	opt stack 0
   759  000003                     PHYGetLongRAMAddr@address:
   760                           	opt stack 0
   761                           
   762                           ; 2 bytes @ 0x2
   763  000003                     	ds	1
   764  000004                     PHYSetShortRAMAddr@address:
   765                           	opt stack 0
   766  000004                     PHYGetShortRAMAddr@toReturn:
   767                           	opt stack 0
   768                           
   769                           ; 1 bytes @ 0x3
   770  000004                     	ds	1
   771  000005                     ??_PHYGetLongRAMAddr:
   772  000005                     PHYSetShortRAMAddr@tmpRFIE:
   773                           	opt stack 0
   774  000005                     PHYGetShortRAMAddr@tmpRFIE:
   775                           	opt stack 0
   776  000005                     i2___lmul@multiplicand:
   777                           	opt stack 0
   778                           
   779                           ; 4 bytes @ 0x4
   780  000005                     	ds	2
   781  000007                     PHYGetLongRAMAddr@toReturn:
   782                           	opt stack 0
   783                           
   784                           ; 1 bytes @ 0x6
   785  000007                     	ds	1
   786  000008                     PHYGetLongRAMAddr@tmpRFIE:
   787                           	opt stack 0
   788                           
   789                           ; 1 bytes @ 0x7
   790  000008                     	ds	1
   791  000009                     i2___lmul@product:
   792                           	opt stack 0
   793                           
   794                           ; 4 bytes @ 0x8
   795  000009                     	ds	4
   796  00000D                     i2DELAY_ms@ms:
   797                           	opt stack 0
   798                           
   799                           ; 2 bytes @ 0xC
   800  00000D                     	ds	2
   801  00000F                     i2DELAY_ms@cyclesRequiredForEntireDelay:
   802                           	opt stack 0
   803                           
   804                           ; 4 bytes @ 0xE
   805  00000F                     	ds	4
   806  000013                     ??_high_isr:
   807                           
   808                           ; 1 bytes @ 0x12
   809  000013                     	ds	23
   810  00002A                     high_isr@results:
   811                           	opt stack 0
   812                           
   813                           ; 1 bytes @ 0x29
   814  00002A                     	ds	1
   815  00002B                     high_isr@flags:
   816                           	opt stack 0
   817                           
   818                           ; 2 bytes @ 0x2A
   819  00002B                     	ds	2
   820  00002D                     high_isr@RxBank:
   821                           	opt stack 0
   822                           
   823                           ; 1 bytes @ 0x2C
   824  00002D                     	ds	1
   825  00002E                     high_isr@i:
   826                           	opt stack 0
   827                           
   828                           ; 1 bytes @ 0x2D
   829  00002E                     	ds	1
   830                           tblptru	equ	0xFF8
   831                           tblptrh	equ	0xFF7
   832                           tblptrl	equ	0xFF6
   833                           tablat	equ	0xFF5
   834                           postinc0	equ	0xFEE
   835                           wreg	equ	0xFE8
   836                           postdec1	equ	0xFE5
   837                           fsr1l	equ	0xFE1
   838                           
   839 ;;
   840 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   841 ;;
   842 ;; *************** function _main *****************
   843 ;; Defined at:
   844 ;;		line 42 in file "8bitswdk_pic18f46j50_24j40/firmware/src/main.c"
   845 ;; Parameters:    Size  Location     Type
   846 ;;		None
   847 ;; Auto vars:     Size  Location     Type
   848 ;;		None
   849 ;; Return value:  Size  Location     Type
   850 ;;                  1    wreg      void 
   851 ;; Registers used:
   852 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   853 ;; Tracked objects:
   854 ;;		On entry : 0/0
   855 ;;		On exit  : 0/0
   856 ;;		Unchanged: 0/0
   857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   858 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   859 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   861 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   862 ;;Total ram usage:        0 bytes
   863 ;; Hardware stack levels required when called:    9
   864 ;; This function calls:
   865 ;;		_SYSTEM_Initialize
   866 ;;		__uartPrint
   867 ;;		_uartInitialize
   868 ;;		_uartRead
   869 ;; This function is called by:
   870 ;;		Startup code after reset
   871 ;; This function uses a non-reentrant model
   872 ;;
   873                           
   874                           	psect	text0
   875  00148E                     __ptext0:
   876                           	opt stack 0
   877  00148E                     _main:
   878                           	opt stack 22
   879                           
   880                           ;main.c: 46: SYSTEM_Initialize();
   881                           
   882                           ;incstack = 0
   883  00148E  EC07  F009         	call	_SYSTEM_Initialize	;wreg free
   884                           
   885                           ;main.c: 47: uartInitialize();
   886  001492  EC87  F00A         	call	_uartInitialize	;wreg free
   887                           
   888                           ;main.c: 49: _uartPrint((char*)"Début");
   889  001496  0E9F               	movlw	low STR_3
   890  001498  0100               	movlb	0	; () banked
   891  00149A  6FEB               	movwf	__uartPrint@str& (0+255),b
   892  00149C  0E0F               	movlw	high STR_3
   893  00149E  6FEC               	movwf	(__uartPrint@str+1)& (0+255),b
   894  0014A0  EC07  F00A         	call	__uartPrint	;wreg free
   895  0014A4                     
   896                           ;main.c: 51: {
   897                           ;main.c: 52: if(PIR3bits.RC2IF)
   898  0014A4  AAA4               	btfss	4004,5,c	;volatile
   899  0014A6  D7FE               	goto	l1054
   900                           
   901                           ;main.c: 53: {
   902                           ;main.c: 54: _uartPrint((char*)"Test");
   903  0014A8  0EA5               	movlw	low STR_4
   904  0014AA  0100               	movlb	0	; () banked
   905  0014AC  6FEB               	movwf	__uartPrint@str& (0+255),b
   906  0014AE  0E0F               	movlw	high STR_4
   907  0014B0  6FEC               	movwf	(__uartPrint@str+1)& (0+255),b
   908  0014B2  EC07  F00A         	call	__uartPrint	;wreg free
   909                           
   910                           ;main.c: 55: uartRead();
   911  0014B6  EC2E  F00A         	call	_uartRead	;wreg free
   912  0014BA  D7F4               	goto	l1054
   913  0014BC                     __end_of_main:
   914                           	opt stack 0
   915                           tblptru	equ	0xFF8
   916                           tblptrh	equ	0xFF7
   917                           tblptrl	equ	0xFF6
   918                           tablat	equ	0xFF5
   919                           postinc0	equ	0xFEE
   920                           wreg	equ	0xFE8
   921                           postdec1	equ	0xFE5
   922                           fsr1l	equ	0xFE1
   923                           
   924 ;; *************** function _uartRead *****************
   925 ;; Defined at:
   926 ;;		line 49 in file "8bitswdk_pic18f46j50_24j40/firmware/src/VT100.c"
   927 ;; Parameters:    Size  Location     Type
   928 ;;		None
   929 ;; Auto vars:     Size  Location     Type
   930 ;;  val             1    1[BANK0 ] unsigned char 
   931 ;; Return value:  Size  Location     Type
   932 ;;                  1    wreg      unsigned char 
   933 ;; Registers used:
   934 ;;		wreg, status,2, status,0, cstack
   935 ;; Tracked objects:
   936 ;;		On entry : 0/0
   937 ;;		On exit  : 0/0
   938 ;;		Unchanged: 0/0
   939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   941 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   943 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   944 ;;Total ram usage:        1 bytes
   945 ;; Hardware stack levels used:    1
   946 ;; Hardware stack levels required when called:    6
   947 ;; This function calls:
   948 ;;		_uartWrite
   949 ;;		_vT100EraseEndOfLine
   950 ;; This function is called by:
   951 ;;		_main
   952 ;; This function uses a non-reentrant model
   953 ;;
   954                           
   955                           	psect	text1
   956  00145C                     __ptext1:
   957                           	opt stack 0
   958  00145C                     _uartRead:
   959                           	opt stack 24
   960                           
   961                           ;VT100.c: 50: uint8_t val;
   962                           ;VT100.c: 51: if(RCSTA2bits.OERR) {
   963                           
   964                           ;incstack = 0
   965  00145C  A29C               	btfss	3996,1,c	;volatile
   966  00145E  D002               	goto	l1092
   967                           
   968                           ;VT100.c: 52: RCSTA2bits.CREN = 0;
   969  001460  989C               	bcf	3996,4,c	;volatile
   970                           
   971                           ;VT100.c: 53: RCSTA2bits.CREN = 1;
   972  001462  889C               	bsf	3996,4,c	;volatile
   973  001464                     l1092:
   974                           
   975                           ;VT100.c: 54: }
   976                           ;VT100.c: 56: val = RCREG2;
   977  001464  CFAA F0EB          	movff	4010,uartRead@val	;volatile
   978                           
   979                           ;VT100.c: 57: uartWrite(val);
   980  001468  0100               	movlb	0	; () banked
   981  00146A  51EB               	movf	uartRead@val& (0+255),w,b
   982  00146C  ECBE  F00A         	call	_uartWrite
   983                           
   984                           ;VT100.c: 58: if(val == 0x08) vT100EraseEndOfLine();
   985  001470  0E08               	movlw	8
   986  001472  0100               	movlb	0	; () banked
   987  001474  19EB               	xorwf	uartRead@val& (0+255),w,b
   988  001476  B4D8               	btfsc	status,2,c
   989                           
   990                           ; BSR set to: 0
   991  001478  ECCF  F00A         	call	_vT100EraseEndOfLine	;wreg free
   992                           
   993                           ;VT100.c: 59: if(val == 0x0D) uartWrite(0x0A);
   994  00147C  0E0D               	movlw	13
   995  00147E  0100               	movlb	0	; () banked
   996  001480  19EB               	xorwf	uartRead@val& (0+255),w,b
   997  001482  A4D8               	btfss	status,2,c
   998  001484  0012               	return	
   999                           
  1000                           ; BSR set to: 0
  1001  001486  0E0A               	movlw	10
  1002  001488  ECBE  F00A         	call	_uartWrite
  1003  00148C  0012               	return	
  1004  00148E                     __end_of_uartRead:
  1005                           	opt stack 0
  1006                           tblptru	equ	0xFF8
  1007                           tblptrh	equ	0xFF7
  1008                           tblptrl	equ	0xFF6
  1009                           tablat	equ	0xFF5
  1010                           postinc0	equ	0xFEE
  1011                           wreg	equ	0xFE8
  1012                           postdec1	equ	0xFE5
  1013                           fsr1l	equ	0xFE1
  1014                           status	equ	0xFD8
  1015                           
  1016 ;; *************** function _vT100EraseEndOfLine *****************
  1017 ;; Defined at:
  1018 ;;		line 141 in file "8bitswdk_pic18f46j50_24j40/firmware/src/VT100.c"
  1019 ;; Parameters:    Size  Location     Type
  1020 ;;		None
  1021 ;; Auto vars:     Size  Location     Type
  1022 ;;		None
  1023 ;; Return value:  Size  Location     Type
  1024 ;;                  1    wreg      void 
  1025 ;; Registers used:
  1026 ;;		None
  1027 ;; Tracked objects:
  1028 ;;		On entry : 0/0
  1029 ;;		On exit  : 0/0
  1030 ;;		Unchanged: 0/0
  1031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1032 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1033 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1035 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1036 ;;Total ram usage:        0 bytes
  1037 ;; Hardware stack levels used:    1
  1038 ;; Hardware stack levels required when called:    5
  1039 ;; This function calls:
  1040 ;;		Nothing
  1041 ;; This function is called by:
  1042 ;;		_uartRead
  1043 ;; This function uses a non-reentrant model
  1044 ;;
  1045                           
  1046                           	psect	text2
  1047  00159E                     __ptext2:
  1048                           	opt stack 0
  1049  00159E                     _vT100EraseEndOfLine:
  1050                           	opt stack 24
  1051                           
  1052                           ;incstack = 0
  1053  00159E  0012               	return		;funcret
  1054  0015A0                     __end_of_vT100EraseEndOfLine:
  1055                           	opt stack 0
  1056                           tblptru	equ	0xFF8
  1057                           tblptrh	equ	0xFF7
  1058                           tblptrl	equ	0xFF6
  1059                           tablat	equ	0xFF5
  1060                           postinc0	equ	0xFEE
  1061                           wreg	equ	0xFE8
  1062                           postdec1	equ	0xFE5
  1063                           fsr1l	equ	0xFE1
  1064                           status	equ	0xFD8
  1065                           
  1066 ;; *************** function _uartInitialize *****************
  1067 ;; Defined at:
  1068 ;;		line 28 in file "8bitswdk_pic18f46j50_24j40/firmware/src/VT100.c"
  1069 ;; Parameters:    Size  Location     Type
  1070 ;;		None
  1071 ;; Auto vars:     Size  Location     Type
  1072 ;;		None
  1073 ;; Return value:  Size  Location     Type
  1074 ;;                  1    wreg      void 
  1075 ;; Registers used:
  1076 ;;		wreg, status,2
  1077 ;; Tracked objects:
  1078 ;;		On entry : 0/0
  1079 ;;		On exit  : 0/0
  1080 ;;		Unchanged: 0/0
  1081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1082 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1083 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1085 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1086 ;;Total ram usage:        0 bytes
  1087 ;; Hardware stack levels used:    1
  1088 ;; Hardware stack levels required when called:    5
  1089 ;; This function calls:
  1090 ;;		Nothing
  1091 ;; This function is called by:
  1092 ;;		_main
  1093 ;; This function uses a non-reentrant model
  1094 ;;
  1095                           
  1096                           	psect	text3
  1097  00150E                     __ptext3:
  1098                           	opt stack 0
  1099  00150E                     _uartInitialize:
  1100                           	opt stack 25
  1101                           
  1102                           ;VT100.c: 29: TRISCbits.TRISC6 = 0;
  1103                           
  1104                           ;incstack = 0
  1105  00150E  9C94               	bcf	3988,6,c	;volatile
  1106                           
  1107                           ;VT100.c: 30: TRISDbits.TRISD2 = 1;
  1108  001510  8495               	bsf	3989,2,c	;volatile
  1109                           
  1110                           ;VT100.c: 31: BAUDCON1bits.BRG16 = 0;
  1111  001512  967E               	bcf	3966,3,c	;volatile
  1112                           
  1113                           ;VT100.c: 32: SPBRGH2 = 0;
  1114  001514  0E00               	movlw	0
  1115  001516  6E7D               	movwf	3965,c	;volatile
  1116                           
  1117                           ;VT100.c: 33: SPBRG2 = 25;
  1118  001518  0E19               	movlw	25
  1119  00151A  6EAB               	movwf	4011,c	;volatile
  1120                           
  1121                           ;VT100.c: 35: SPBRG2 = (8000000/2*4)/16/19200-1;
  1122  00151C  0E33               	movlw	51
  1123  00151E  6EAB               	movwf	4011,c	;volatile
  1124                           
  1125                           ;VT100.c: 36: TXSTA2 = 0x24;
  1126  001520  0E24               	movlw	36
  1127  001522  6EA8               	movwf	4008,c	;volatile
  1128                           
  1129                           ;VT100.c: 37: RCSTA2=0x90;
  1130  001524  0E90               	movlw	144
  1131  001526  6E9C               	movwf	3996,c	;volatile
  1132                           
  1133                           ;VT100.c: 38: RCSTA1bits.CREN = 1;
  1134  001528  88AC               	bsf	4012,4,c	;volatile
  1135                           
  1136                           ;VT100.c: 39: RCSTA1bits.SPEN = 1;
  1137  00152A  8EAC               	bsf	4012,7,c	;volatile
  1138  00152C  0012               	return		;funcret
  1139  00152E                     __end_of_uartInitialize:
  1140                           	opt stack 0
  1141                           tblptru	equ	0xFF8
  1142                           tblptrh	equ	0xFF7
  1143                           tblptrl	equ	0xFF6
  1144                           tablat	equ	0xFF5
  1145                           postinc0	equ	0xFEE
  1146                           wreg	equ	0xFE8
  1147                           postdec1	equ	0xFE5
  1148                           fsr1l	equ	0xFE1
  1149                           status	equ	0xFD8
  1150                           
  1151 ;; *************** function __uartPrint *****************
  1152 ;; Defined at:
  1153 ;;		line 75 in file "8bitswdk_pic18f46j50_24j40/firmware/src/VT100.c"
  1154 ;; Parameters:    Size  Location     Type
  1155 ;;  str             2    1[BANK0 ] PTR unsigned char 
  1156 ;;		 -> STR_4(5), STR_3(6), 
  1157 ;; Auto vars:     Size  Location     Type
  1158 ;;  i               2    5[BANK0 ] int 
  1159 ;; Return value:  Size  Location     Type
  1160 ;;                  1    wreg      void 
  1161 ;; Registers used:
  1162 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1163 ;; Tracked objects:
  1164 ;;		On entry : 0/0
  1165 ;;		On exit  : 0/0
  1166 ;;		Unchanged: 0/0
  1167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1168 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1169 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1170 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1171 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1172 ;;Total ram usage:        6 bytes
  1173 ;; Hardware stack levels used:    1
  1174 ;; Hardware stack levels required when called:    6
  1175 ;; This function calls:
  1176 ;;		_uartWrite
  1177 ;; This function is called by:
  1178 ;;		_main
  1179 ;; This function uses a non-reentrant model
  1180 ;;
  1181                           
  1182                           	psect	text4
  1183  00140E                     __ptext4:
  1184                           	opt stack 0
  1185  00140E                     __uartPrint:
  1186                           	opt stack 24
  1187                           
  1188                           ;VT100.c: 76: int i=0;
  1189                           
  1190                           ;incstack = 0
  1191  00140E  0E00               	movlw	0
  1192  001410  0100               	movlb	0	; () banked
  1193  001412  6FF0               	movwf	(__uartPrint@i+1)& (0+255),b
  1194  001414  0E00               	movlw	0
  1195  001416  6FEF               	movwf	__uartPrint@i& (0+255),b
  1196                           
  1197                           ;VT100.c: 77: while(str[i] != 0) uartWrite(str[i++]);
  1198  001418  D011               	goto	l1104
  1199  00141A                     
  1200                           ; BSR set to: 0
  1201                           
  1202                           ; BSR set to: 0
  1203  00141A  51EF               	movf	__uartPrint@i& (0+255),w,b
  1204  00141C  25EB               	addwf	__uartPrint@str& (0+255),w,b
  1205  00141E  6FED               	movwf	??__uartPrint& (0+255),b
  1206  001420  51F0               	movf	(__uartPrint@i+1)& (0+255),w,b
  1207  001422  21EC               	addwfc	(__uartPrint@str+1)& (0+255),w,b
  1208  001424  6FEE               	movwf	(??__uartPrint+1)& (0+255),b
  1209  001426  C0ED  FFF6         	movff	??__uartPrint,tblptrl
  1210  00142A  C0EE  FFF7         	movff	??__uartPrint+1,tblptrh
  1211  00142E                     	if	0	;tblptru may be non-zero
  1212  00142E                     	endif
  1213  00142E                     	if	0	;tblptru may be non-zero
  1214  00142E                     	endif
  1215  00142E  0008               	tblrd		*
  1216  001430  50F5               	movf	tablat,w,c
  1217  001432  ECBE  F00A         	call	_uartWrite
  1218  001436  0100               	movlb	0	; () banked
  1219  001438  4BEF               	infsnz	__uartPrint@i& (0+255),f,b
  1220  00143A  2BF0               	incf	(__uartPrint@i+1)& (0+255),f,b
  1221  00143C                     l1104:
  1222                           
  1223                           ; BSR set to: 0
  1224                           
  1225                           ; BSR set to: 0
  1226  00143C  51EF               	movf	__uartPrint@i& (0+255),w,b
  1227  00143E  25EB               	addwf	__uartPrint@str& (0+255),w,b
  1228  001440  6FED               	movwf	??__uartPrint& (0+255),b
  1229  001442  51F0               	movf	(__uartPrint@i+1)& (0+255),w,b
  1230  001444  21EC               	addwfc	(__uartPrint@str+1)& (0+255),w,b
  1231  001446  6FEE               	movwf	(??__uartPrint+1)& (0+255),b
  1232  001448  C0ED  FFF6         	movff	??__uartPrint,tblptrl
  1233  00144C  C0EE  FFF7         	movff	??__uartPrint+1,tblptrh
  1234  001450                     	if	0	;tblptru may be non-zero
  1235  001450                     	endif
  1236  001450                     	if	0	;tblptru may be non-zero
  1237  001450                     	endif
  1238  001450  0008               	tblrd		*
  1239  001452  50F5               	movf	tablat,w,c
  1240  001454  0900               	iorlw	0
  1241  001456  B4D8               	btfsc	status,2,c
  1242  001458  0012               	return	
  1243  00145A  D7DF               	goto	l1105
  1244  00145C                     __end_of__uartPrint:
  1245                           	opt stack 0
  1246                           tblptru	equ	0xFF8
  1247                           tblptrh	equ	0xFF7
  1248                           tblptrl	equ	0xFF6
  1249                           tablat	equ	0xFF5
  1250                           postinc0	equ	0xFEE
  1251                           wreg	equ	0xFE8
  1252                           postdec1	equ	0xFE5
  1253                           fsr1l	equ	0xFE1
  1254                           status	equ	0xFD8
  1255                           
  1256 ;; *************** function _uartWrite *****************
  1257 ;; Defined at:
  1258 ;;		line 67 in file "8bitswdk_pic18f46j50_24j40/firmware/src/VT100.c"
  1259 ;; Parameters:    Size  Location     Type
  1260 ;;  c               1    wreg     unsigned char 
  1261 ;; Auto vars:     Size  Location     Type
  1262 ;;  c               1    0[BANK0 ] unsigned char 
  1263 ;; Return value:  Size  Location     Type
  1264 ;;                  1    wreg      void 
  1265 ;; Registers used:
  1266 ;;		wreg
  1267 ;; Tracked objects:
  1268 ;;		On entry : 0/0
  1269 ;;		On exit  : 0/0
  1270 ;;		Unchanged: 0/0
  1271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1272 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1273 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1275 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1276 ;;Total ram usage:        1 bytes
  1277 ;; Hardware stack levels used:    1
  1278 ;; Hardware stack levels required when called:    5
  1279 ;; This function calls:
  1280 ;;		Nothing
  1281 ;; This function is called by:
  1282 ;;		_uartRead
  1283 ;;		__uartPrint
  1284 ;;		_uartHexaPrint
  1285 ;; This function uses a non-reentrant model
  1286 ;;
  1287                           
  1288                           	psect	text5
  1289  00157C                     __ptext5:
  1290                           	opt stack 0
  1291  00157C                     _uartWrite:
  1292                           	opt stack 24
  1293                           
  1294                           ; BSR set to: 0
  1295                           ;incstack = 0
  1296                           ;uartWrite@c stored from wreg
  1297  00157C  0100               	movlb	0	; () banked
  1298  00157E  6FEA               	movwf	uartWrite@c& (0+255),b
  1299  001580                     
  1300                           ;VT100.c: 68: while(TXSTA2bits.TRMT == 0);
  1301  001580  A2A8               	btfss	4008,1,c	;volatile
  1302  001582  D7FE               	goto	l8855
  1303                           
  1304                           ;VT100.c: 69: TXREG2 = c;
  1305  001584  C0EA  FFA9         	movff	uartWrite@c,4009	;volatile
  1306  001588  0012               	return		;funcret
  1307  00158A                     __end_of_uartWrite:
  1308                           	opt stack 0
  1309                           tblptru	equ	0xFF8
  1310                           tblptrh	equ	0xFF7
  1311                           tblptrl	equ	0xFF6
  1312                           tablat	equ	0xFF5
  1313                           postinc0	equ	0xFEE
  1314                           wreg	equ	0xFE8
  1315                           postdec1	equ	0xFE5
  1316                           fsr1l	equ	0xFE1
  1317                           status	equ	0xFD8
  1318                           
  1319 ;; *************** function _SYSTEM_Initialize *****************
  1320 ;; Defined at:
  1321 ;;		line 60 in file "8bitswdk_pic18f46j50_24j40/firmware/src/system_config/8bitwdk_pic18f46j50_24j40/system.c"
  1322 ;; Parameters:    Size  Location     Type
  1323 ;;		None
  1324 ;; Auto vars:     Size  Location     Type
  1325 ;;		None
  1326 ;; Return value:  Size  Location     Type
  1327 ;;                  1    wreg      void 
  1328 ;; Registers used:
  1329 ;;		wreg, status,2, status,0, cstack
  1330 ;; Tracked objects:
  1331 ;;		On entry : 0/0
  1332 ;;		On exit  : 0/0
  1333 ;;		Unchanged: 0/0
  1334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1335 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1336 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1337 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1338 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1339 ;;Total ram usage:        0 bytes
  1340 ;; Hardware stack levels used:    1
  1341 ;; Hardware stack levels required when called:    8
  1342 ;; This function calls:
  1343 ;;		_LCD_Initialize
  1344 ;; This function is called by:
  1345 ;;		_main
  1346 ;; This function uses a non-reentrant model
  1347 ;;
  1348                           
  1349                           	psect	text6
  1350  00120E                     __ptext6:
  1351                           	opt stack 0
  1352  00120E                     _SYSTEM_Initialize:
  1353                           	opt stack 22
  1354                           
  1355                           ;system.c: 64: OSCCON = 0x78;
  1356                           
  1357                           ;incstack = 0
  1358  00120E  0E78               	movlw	120
  1359  001210  6ED3               	movwf	4051,c	;volatile
  1360                           
  1361                           ;system.c: 66: WDTCONbits.SWDTEN = 0;
  1362  001212  90C0               	bcf	4032,0,c	;volatile
  1363                           
  1364                           ;system.c: 67: OSCTUNEbits.PLLEN = 1;
  1365  001214  8C9B               	bsf	3995,6,c	;volatile
  1366                           
  1367                           ;system.c: 68: INTCON = 0;
  1368  001216  0E00               	movlw	0
  1369  001218  6EF2               	movwf	intcon,c	;volatile
  1370                           
  1371                           ;system.c: 71: EECON2 = 0x55;
  1372  00121A  0E55               	movlw	85
  1373  00121C  6EA7               	movwf	4007,c	;volsfr
  1374                           
  1375                           ;system.c: 72: EECON2 = 0xAA;
  1376  00121E  0EAA               	movlw	170
  1377  001220  6EA7               	movwf	4007,c	;volsfr
  1378                           
  1379                           ;system.c: 73: PPSCONbits.IOLOCK = 0;
  1380  001222  010E               	movlb	14	; () banked
  1381  001224  91FF               	bcf	255,0,b	;volatile
  1382                           
  1383                           ;system.c: 76: RPINR1 = 4;
  1384  001226  0E04               	movlw	4
  1385  001228  6FE7               	movwf	231,b	;volatile
  1386                           
  1387                           ;system.c: 87: RPINR16 = 19;
  1388  00122A  0E13               	movlw	19
  1389  00122C  6FF6               	movwf	246,b	;volatile
  1390                           
  1391                           ;system.c: 88: RPOR17 = 5;
  1392  00122E  0E05               	movlw	5
  1393  001230  6FD7               	movwf	215,b	;volatile
  1394                           
  1395                           ;system.c: 91: EECON2 = 0x55;
  1396  001232  0E55               	movlw	85
  1397  001234  6EA7               	movwf	4007,c	;volsfr
  1398                           
  1399                           ;system.c: 92: EECON2 = 0xAA;
  1400  001236  0EAA               	movlw	170
  1401  001238  6EA7               	movwf	4007,c	;volsfr
  1402                           
  1403                           ; BSR set to: 14
  1404                           ;system.c: 93: PPSCONbits.IOLOCK = 1;
  1405  00123A  81FF               	bsf	255,0,b	;volatile
  1406                           
  1407                           ; BSR set to: 14
  1408                           ;system.c: 96: ANCON0 = 0xFF;
  1409  00123C  010F               	movlb	15	; () banked
  1410  00123E  6948               	setf	72,b	;volatile
  1411                           
  1412                           ;system.c: 97: ANCON1 = 0x3F;
  1413  001240  0E3F               	movlw	63
  1414  001242  6F49               	movwf	73,b	;volatile
  1415                           
  1416                           ; BSR set to: 15
  1417                           ;system.c: 98: INTCON2bits.RBPU = 0;
  1418  001244  9EF1               	bcf	intcon2,7,c	;volatile
  1419                           
  1420                           ; BSR set to: 15
  1421                           ;system.c: 100: TRISA = 0xFF;
  1422  001246  6892               	setf	3986,c	;volatile
  1423                           
  1424                           ; BSR set to: 15
  1425                           ;system.c: 101: TRISB = 0xFF;
  1426  001248  6893               	setf	3987,c	;volatile
  1427                           
  1428                           ; BSR set to: 15
  1429                           ;system.c: 102: TRISC = 0xFF;
  1430  00124A  6894               	setf	3988,c	;volatile
  1431                           
  1432                           ; BSR set to: 15
  1433                           ;system.c: 103: TRISD = 0xFF;
  1434  00124C  6895               	setf	3989,c	;volatile
  1435                           
  1436                           ; BSR set to: 15
  1437                           ;system.c: 104: TRISE = 0xFF;
  1438  00124E  6896               	setf	3990,c	;volatile
  1439                           
  1440                           ;system.c: 106: LATA = 0;
  1441  001250  0E00               	movlw	0
  1442  001252  6E89               	movwf	3977,c	;volatile
  1443                           
  1444                           ;system.c: 107: LATB = 0;
  1445  001254  0E00               	movlw	0
  1446  001256  6E8A               	movwf	3978,c	;volatile
  1447                           
  1448                           ;system.c: 109: LATD = 0;
  1449  001258  0E00               	movlw	0
  1450  00125A  6E8C               	movwf	3980,c	;volatile
  1451                           
  1452                           ;system.c: 110: LATE = 0;
  1453  00125C  0E00               	movlw	0
  1454  00125E  6E8D               	movwf	3981,c	;volatile
  1455                           
  1456                           ; BSR set to: 15
  1457                           ;system.c: 113: TRISBbits.TRISB0 = 1;
  1458  001260  8093               	bsf	3987,0,c	;volatile
  1459                           
  1460                           ; BSR set to: 15
  1461                           ;system.c: 114: TRISBbits.TRISB2 = 1;
  1462  001262  8493               	bsf	3987,2,c	;volatile
  1463                           
  1464                           ; BSR set to: 15
  1465                           ;system.c: 115: TRISAbits.TRISA2 = 0;
  1466  001264  9492               	bcf	3986,2,c	;volatile
  1467                           
  1468                           ; BSR set to: 15
  1469                           ;system.c: 116: TRISAbits.TRISA3 = 0;
  1470  001266  9692               	bcf	3986,3,c	;volatile
  1471                           
  1472                           ; BSR set to: 15
  1473                           ;system.c: 119: TRISBbits.TRISB3 = 0;
  1474  001268  9693               	bcf	3987,3,c	;volatile
  1475                           
  1476                           ; BSR set to: 15
  1477                           ;system.c: 120: LATBbits.LATB3 = 1;
  1478  00126A  868A               	bsf	3978,3,c	;volatile
  1479                           
  1480                           ; BSR set to: 15
  1481                           ;system.c: 121: TRISDbits.TRISD7 = 0;
  1482  00126C  9E95               	bcf	3989,7,c	;volatile
  1483                           
  1484                           ; BSR set to: 15
  1485                           ;system.c: 122: LATDbits.LATD7 = 1;
  1486  00126E  8E8C               	bsf	3980,7,c	;volatile
  1487                           
  1488                           ; BSR set to: 15
  1489                           ;system.c: 123: TRISBbits.TRISB1 = 1;
  1490  001270  8293               	bsf	3987,1,c	;volatile
  1491                           
  1492                           ; BSR set to: 15
  1493                           ;system.c: 128: TRISBbits.TRISB5 = 1;
  1494  001272  8A93               	bsf	3987,5,c	;volatile
  1495                           
  1496                           ; BSR set to: 15
  1497                           ;system.c: 129: TRISCbits.TRISC7 = 0;
  1498  001274  9E94               	bcf	3988,7,c	;volatile
  1499                           
  1500                           ; BSR set to: 15
  1501                           ;system.c: 130: TRISBbits.TRISB4 = 0;
  1502  001276  9893               	bcf	3987,4,c	;volatile
  1503                           
  1504                           ;system.c: 132: SSP1STAT = 0xC0;
  1505  001278  0EC0               	movlw	192
  1506  00127A  6EC7               	movwf	4039,c	;volatile
  1507                           
  1508                           ;system.c: 133: SSP1CON1 = 0x21;
  1509  00127C  0E21               	movlw	33
  1510  00127E  6EC6               	movwf	4038,c	;volatile
  1511                           
  1512                           ; BSR set to: 15
  1513                           ;system.c: 139: TRISDbits.TRISD3 = 0;
  1514  001280  9695               	bcf	3989,3,c	;volatile
  1515                           
  1516                           ; BSR set to: 15
  1517                           ;system.c: 140: LATDbits.LATD3 = 1;
  1518  001282  868C               	bsf	3980,3,c	;volatile
  1519                           
  1520                           ; BSR set to: 15
  1521                           ;system.c: 143: INTCON2bits.INTEDG1 = 0;
  1522  001284  9AF1               	bcf	intcon2,5,c	;volatile
  1523                           
  1524                           ; BSR set to: 15
  1525                           ;system.c: 145: TRISCbits.TRISC2 = 0;
  1526  001286  9494               	bcf	3988,2,c	;volatile
  1527                           
  1528                           ; BSR set to: 15
  1529                           ;system.c: 146: LATCbits.LATC2 = 1;
  1530  001288  848B               	bsf	3979,2,c	;volatile
  1531                           
  1532                           ; BSR set to: 15
  1533                           ;system.c: 150: INTCONbits.GIEH = 1;
  1534  00128A  8EF2               	bsf	intcon,7,c	;volatile
  1535                           
  1536                           ; BSR set to: 15
  1537                           ;system.c: 151: INTCON3bits.INT1IF = 0;
  1538  00128C  90F0               	bcf	intcon3,0,c	;volatile
  1539                           
  1540                           ; BSR set to: 15
  1541                           ;system.c: 152: INTCON3bits.INT1IE = 1;
  1542  00128E  86F0               	bsf	intcon3,3,c	;volatile
  1543                           
  1544                           ; BSR set to: 15
  1545                           ;system.c: 158: LCD_Initialize();
  1546  001290  EC4B  F009         	call	_LCD_Initialize	;wreg free
  1547  001294  0012               	return		;funcret
  1548  001296                     __end_of_SYSTEM_Initialize:
  1549                           	opt stack 0
  1550                           tblptru	equ	0xFF8
  1551                           tblptrh	equ	0xFF7
  1552                           tblptrl	equ	0xFF6
  1553                           tablat	equ	0xFF5
  1554                           intcon	equ	0xFF2
  1555                           intcon2	equ	0xFF1
  1556                           intcon3	equ	0xFF0
  1557                           postinc0	equ	0xFEE
  1558                           wreg	equ	0xFE8
  1559                           postdec1	equ	0xFE5
  1560                           fsr1l	equ	0xFE1
  1561                           status	equ	0xFD8
  1562                           
  1563 ;; *************** function _LCD_Initialize *****************
  1564 ;; Defined at:
  1565 ;;		line 149 in file "8bitswdk_pic18f46j50_24j40/firmware/src/system_config/8bitwdk_pic18f46j50_24j40/lcd.c"
  1566 ;; Parameters:    Size  Location     Type
  1567 ;;		None
  1568 ;; Auto vars:     Size  Location     Type
  1569 ;;		None
  1570 ;; Return value:  Size  Location     Type
  1571 ;;                  1    wreg      void 
  1572 ;; Registers used:
  1573 ;;		wreg, status,2, status,0, cstack
  1574 ;; Tracked objects:
  1575 ;;		On entry : 0/0
  1576 ;;		On exit  : 0/0
  1577 ;;		Unchanged: 0/0
  1578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1579 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1580 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1582 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1583 ;;Total ram usage:        0 bytes
  1584 ;; Hardware stack levels used:    1
  1585 ;; Hardware stack levels required when called:    7
  1586 ;; This function calls:
  1587 ;;		_DELAY_ms
  1588 ;;		_I2CWrite
  1589 ;; This function is called by:
  1590 ;;		_SYSTEM_Initialize
  1591 ;; This function uses a non-reentrant model
  1592 ;;
  1593                           
  1594                           	psect	text7
  1595  001296                     __ptext7:
  1596                           	opt stack 0
  1597  001296                     _LCD_Initialize:
  1598                           	opt stack 22
  1599                           
  1600                           ;lcd.c: 152: TRISD |= 0x53;
  1601                           
  1602                           ;incstack = 0
  1603  001296  0E53               	movlw	83
  1604  001298  1295               	iorwf	3989,f,c	;volatile
  1605                           
  1606                           ;lcd.c: 155: PIR3bits.SSP2IF = 0;
  1607  00129A  9EA4               	bcf	4004,7,c	;volatile
  1608                           
  1609                           ;lcd.c: 156: SSP2STAT = 0x00;
  1610  00129C  0E00               	movlw	0
  1611  00129E  6E73               	movwf	3955,c	;volatile
  1612                           
  1613                           ;lcd.c: 158: SSP2ADD = 0xF0;
  1614  0012A0  0EF0               	movlw	240
  1615  0012A2  6E74               	movwf	3956,c	;volatile
  1616                           
  1617                           ;lcd.c: 159: SSP2CON1 = 0x28;
  1618  0012A4  0E28               	movlw	40
  1619  0012A6  6E72               	movwf	3954,c	;volatile
  1620                           
  1621                           ;lcd.c: 160: SSP2CON2 = 0x00;
  1622  0012A8  0E00               	movlw	0
  1623  0012AA  6E71               	movwf	3953,c	;volatile
  1624                           
  1625                           ;lcd.c: 161: PIE3bits.SSP2IE = 1;
  1626  0012AC  8EA3               	bsf	4003,7,c	;volatile
  1627                           
  1628                           ;lcd.c: 163: INTCONbits.GIEH = 1;
  1629  0012AE  8EF2               	bsf	intcon,7,c	;volatile
  1630                           
  1631                           ;lcd.c: 164: INTCONbits.GIEL = 1;
  1632  0012B0  8CF2               	bsf	intcon,6,c	;volatile
  1633                           
  1634                           ;lcd.c: 166: DELAY_ms(300);
  1635  0012B2  0E01               	movlw	1
  1636  0012B4  0100               	movlb	0	; () banked
  1637  0012B6  6FF7               	movwf	(DELAY_ms@ms+1)& (0+255),b
  1638  0012B8  0E2C               	movlw	44
  1639  0012BA  6FF6               	movwf	DELAY_ms@ms& (0+255),b
  1640  0012BC  EC78  F008         	call	_DELAY_ms	;wreg free
  1641                           
  1642                           ;lcd.c: 168: LCDCommand[0] = 0x3E << 1;
  1643  0012C0  0E7C               	movlw	124
  1644  0012C2  0100               	movlb	0	; () banked
  1645  0012C4  6F82               	movwf	_LCDCommand& (0+255),b
  1646                           
  1647                           ; BSR set to: 0
  1648                           ;lcd.c: 169: LCDCommand[1] = 0x81;
  1649  0012C6  0E81               	movlw	129
  1650  0012C8  6F83               	movwf	(_LCDCommand+1)& (0+255),b
  1651                           
  1652                           ; BSR set to: 0
  1653                           ;lcd.c: 170: LCDCommand[2] = 0x00;
  1654  0012CA  0E00               	movlw	0
  1655  0012CC  6F84               	movwf	(_LCDCommand+2)& (0+255),b
  1656                           
  1657                           ;lcd.c: 172: I2CWrite(3, 0);
  1658  0012CE  0E00               	movlw	0
  1659  0012D0  6FEA               	movwf	I2CWrite@BufferLen& (0+255),b
  1660  0012D2  0E03               	movlw	3
  1661  0012D4  EC97  F00A         	call	_I2CWrite
  1662                           
  1663                           ;lcd.c: 174: DELAY_ms(200);
  1664  0012D8  0E00               	movlw	0
  1665  0012DA  0100               	movlb	0	; () banked
  1666  0012DC  6FF7               	movwf	(DELAY_ms@ms+1)& (0+255),b
  1667  0012DE  0EC8               	movlw	200
  1668  0012E0  6FF6               	movwf	DELAY_ms@ms& (0+255),b
  1669  0012E2  EC78  F008         	call	_DELAY_ms	;wreg free
  1670                           
  1671                           ;lcd.c: 177: LCDCommand[0] = 0x3E << 1;
  1672  0012E6  0E7C               	movlw	124
  1673  0012E8  0100               	movlb	0	; () banked
  1674  0012EA  6F82               	movwf	_LCDCommand& (0+255),b
  1675                           
  1676                           ; BSR set to: 0
  1677                           ;lcd.c: 178: LCDCommand[1] = 0x51;
  1678  0012EC  0E51               	movlw	81
  1679  0012EE  6F83               	movwf	(_LCDCommand+1)& (0+255),b
  1680                           
  1681                           ; BSR set to: 0
  1682                           ;lcd.c: 179: LCDCommand[2] = 0x08;
  1683  0012F0  0E08               	movlw	8
  1684  0012F2  6F84               	movwf	(_LCDCommand+2)& (0+255),b
  1685                           
  1686                           ; BSR set to: 0
  1687                           ;lcd.c: 181: I2CWrite(3, 0);
  1688  0012F4  0E00               	movlw	0
  1689  0012F6  6FEA               	movwf	I2CWrite@BufferLen& (0+255),b
  1690  0012F8  0E03               	movlw	3
  1691  0012FA  EC97  F00A         	call	_I2CWrite
  1692                           
  1693                           ;lcd.c: 182: DELAY_ms(200);
  1694  0012FE  0E00               	movlw	0
  1695  001300  0100               	movlb	0	; () banked
  1696  001302  6FF7               	movwf	(DELAY_ms@ms+1)& (0+255),b
  1697  001304  0EC8               	movlw	200
  1698  001306  6FF6               	movwf	DELAY_ms@ms& (0+255),b
  1699  001308  EC78  F008         	call	_DELAY_ms	;wreg free
  1700  00130C  0012               	return		;funcret
  1701  00130E                     __end_of_LCD_Initialize:
  1702                           	opt stack 0
  1703                           tblptru	equ	0xFF8
  1704                           tblptrh	equ	0xFF7
  1705                           tblptrl	equ	0xFF6
  1706                           tablat	equ	0xFF5
  1707                           intcon	equ	0xFF2
  1708                           intcon2	equ	0xFF1
  1709                           intcon3	equ	0xFF0
  1710                           postinc0	equ	0xFEE
  1711                           wreg	equ	0xFE8
  1712                           postdec1	equ	0xFE5
  1713                           fsr1l	equ	0xFE1
  1714                           status	equ	0xFD8
  1715                           
  1716 ;; *************** function _I2CWrite *****************
  1717 ;; Defined at:
  1718 ;;		line 123 in file "8bitswdk_pic18f46j50_24j40/firmware/src/system_config/8bitwdk_pic18f46j50_24j40/lcd.c"
  1719 ;; Parameters:    Size  Location     Type
  1720 ;;  Commandlen      1    wreg     unsigned char 
  1721 ;;  BufferLen       1    0[BANK0 ] unsigned char 
  1722 ;; Auto vars:     Size  Location     Type
  1723 ;;  Commandlen      1    1[BANK0 ] unsigned char 
  1724 ;; Return value:  Size  Location     Type
  1725 ;;                  1    wreg      void 
  1726 ;; Registers used:
  1727 ;;		wreg, status,2
  1728 ;; Tracked objects:
  1729 ;;		On entry : 0/0
  1730 ;;		On exit  : 0/0
  1731 ;;		Unchanged: 0/0
  1732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1733 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1734 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1735 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1736 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1737 ;;Total ram usage:        2 bytes
  1738 ;; Hardware stack levels used:    1
  1739 ;; Hardware stack levels required when called:    5
  1740 ;; This function calls:
  1741 ;;		Nothing
  1742 ;; This function is called by:
  1743 ;;		_LCD_Initialize
  1744 ;;		_LCD_Update
  1745 ;;		_LCDBacklightON
  1746 ;;		_LCDBacklightOFF
  1747 ;; This function uses a non-reentrant model
  1748 ;;
  1749                           
  1750                           	psect	text8
  1751  00152E                     __ptext8:
  1752                           	opt stack 0
  1753  00152E                     _I2CWrite:
  1754                           	opt stack 23
  1755                           
  1756                           ;incstack = 0
  1757                           ;I2CWrite@Commandlen stored from wreg
  1758  00152E  0100               	movlb	0	; () banked
  1759  001530  6FEB               	movwf	I2CWrite@Commandlen& (0+255),b
  1760  001532                     
  1761                           ;lcd.c: 125: while(SSP2CON2bits.PEN == 1 );
  1762  001532  B471               	btfsc	3953,2,c	;volatile
  1763  001534  D7FE               	goto	l8807
  1764                           
  1765                           ;lcd.c: 126: CommandPtr = 0;
  1766  001536  0E00               	movlw	0
  1767  001538  6E4D               	movwf	_CommandPtr,c
  1768                           
  1769                           ;lcd.c: 127: TextPtr = 0;
  1770  00153A  0E00               	movlw	0
  1771  00153C  6E4C               	movwf	_TextPtr,c
  1772                           
  1773                           ;lcd.c: 128: CommandLen = Commandlen;
  1774  00153E  C0EB  F04F         	movff	I2CWrite@Commandlen,_CommandLen
  1775                           
  1776                           ;lcd.c: 129: TextLen = BufferLen;
  1777  001542  C0EA  F04E         	movff	I2CWrite@BufferLen,_TextLen
  1778                           
  1779                           ;lcd.c: 130: SSP2CON2bits.SEN = 1;
  1780  001546  8071               	bsf	3953,0,c	;volatile
  1781  001548  0012               	return		;funcret
  1782  00154A                     __end_of_I2CWrite:
  1783                           	opt stack 0
  1784                           tblptru	equ	0xFF8
  1785                           tblptrh	equ	0xFF7
  1786                           tblptrl	equ	0xFF6
  1787                           tablat	equ	0xFF5
  1788                           intcon	equ	0xFF2
  1789                           intcon2	equ	0xFF1
  1790                           intcon3	equ	0xFF0
  1791                           postinc0	equ	0xFEE
  1792                           wreg	equ	0xFE8
  1793                           postdec1	equ	0xFE5
  1794                           fsr1l	equ	0xFE1
  1795                           status	equ	0xFD8
  1796                           
  1797 ;; *************** function _DELAY_ms *****************
  1798 ;; Defined at:
  1799 ;;		line 108 in file "8bitswdk_pic18f46j50_24j40/firmware/src/system_config/8bitwdk_pic18f46j50_24j40/delay.c"
  1800 ;; Parameters:    Size  Location     Type
  1801 ;;  ms              2   12[BANK0 ] unsigned int 
  1802 ;; Auto vars:     Size  Location     Type
  1803 ;;  cyclesRequir    4   14[BANK0 ] long 
  1804 ;; Return value:  Size  Location     Type
  1805 ;;                  1    wreg      void 
  1806 ;; Registers used:
  1807 ;;		wreg, status,2, status,0, cstack
  1808 ;; Tracked objects:
  1809 ;;		On entry : 0/0
  1810 ;;		On exit  : 0/0
  1811 ;;		Unchanged: 0/0
  1812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1813 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1814 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1816 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1817 ;;Total ram usage:        6 bytes
  1818 ;; Hardware stack levels used:    1
  1819 ;; Hardware stack levels required when called:    6
  1820 ;; This function calls:
  1821 ;;		___lmul
  1822 ;; This function is called by:
  1823 ;;		_LCD_Initialize
  1824 ;;		_LCDDisplay
  1825 ;;		_LCDBacklightON
  1826 ;;		_LCDBacklightOFF
  1827 ;; This function uses a non-reentrant model
  1828 ;;
  1829                           
  1830                           	psect	text9
  1831  0010F0                     __ptext9:
  1832                           	opt stack 0
  1833  0010F0                     _DELAY_ms:
  1834                           	opt stack 22
  1835                           
  1836                           ;delay.c: 112: int32_t cyclesRequiredForEntireDelay = 0;
  1837                           
  1838                           ;incstack = 0
  1839  0010F0  0E00               	movlw	0
  1840  0010F2  0100               	movlb	0	; () banked
  1841  0010F4  6FF8               	movwf	DELAY_ms@cyclesRequiredForEntireDelay& (0+255),b
  1842  0010F6  0E00               	movlw	0
  1843  0010F8  6FF9               	movwf	(DELAY_ms@cyclesRequiredForEntireDelay+1)& (0+255),b
  1844  0010FA  0E00               	movlw	0
  1845  0010FC  6FFA               	movwf	(DELAY_ms@cyclesRequiredForEntireDelay+2)& (0+255),b
  1846  0010FE  0E00               	movlw	0
  1847  001100  6FFB               	movwf	(DELAY_ms@cyclesRequiredForEntireDelay+3)& (0+255),b
  1848                           
  1849                           ; BSR set to: 0
  1850                           ;delay.c: 115: cyclesRequiredForEntireDelay = (signed long)(((8000000/2*4)/4)/1000) * ms
      +                          ;
  1851  001102  C0F6  F0EA         	movff	DELAY_ms@ms,___lmul@multiplier
  1852  001106  C0F7  F0EB         	movff	DELAY_ms@ms+1,___lmul@multiplier+1
  1853  00110A  6BEC               	clrf	(___lmul@multiplier+2)& (0+255),b
  1854  00110C  6BED               	clrf	(___lmul@multiplier+3)& (0+255),b
  1855  00110E  0EA0               	movlw	160
  1856  001110  6FEE               	movwf	___lmul@multiplicand& (0+255),b
  1857  001112  0E0F               	movlw	15
  1858  001114  6FEF               	movwf	(___lmul@multiplicand+1)& (0+255),b
  1859  001116  0E00               	movlw	0
  1860  001118  6FF0               	movwf	(___lmul@multiplicand+2)& (0+255),b
  1861  00111A  0E00               	movlw	0
  1862  00111C  6FF1               	movwf	(___lmul@multiplicand+3)& (0+255),b
  1863  00111E  EC87  F009         	call	___lmul	;wreg free
  1864  001122  C0EA  F0F8         	movff	?___lmul,DELAY_ms@cyclesRequiredForEntireDelay
  1865  001126  C0EB  F0F9         	movff	?___lmul+1,DELAY_ms@cyclesRequiredForEntireDelay+1
  1866  00112A  C0EC  F0FA         	movff	?___lmul+2,DELAY_ms@cyclesRequiredForEntireDelay+2
  1867  00112E  C0ED  F0FB         	movff	?___lmul+3,DELAY_ms@cyclesRequiredForEntireDelay+3
  1868                           
  1869                           ;delay.c: 119: cyclesRequiredForEntireDelay -= (148 + 22);
  1870  001132  0E56               	movlw	86
  1871  001134  0100               	movlb	0	; () banked
  1872  001136  27F8               	addwf	DELAY_ms@cyclesRequiredForEntireDelay& (0+255),f,b
  1873  001138  0EFF               	movlw	255
  1874  00113A  23F9               	addwfc	(DELAY_ms@cyclesRequiredForEntireDelay+1)& (0+255),f,b
  1875  00113C  0EFF               	movlw	255
  1876  00113E  23FA               	addwfc	(DELAY_ms@cyclesRequiredForEntireDelay+2)& (0+255),f,b
  1877  001140  0EFF               	movlw	255
  1878  001142  23FB               	addwfc	(DELAY_ms@cyclesRequiredForEntireDelay+3)& (0+255),f,b
  1879                           
  1880                           ; BSR set to: 0
  1881                           ;delay.c: 121: if (cyclesRequiredForEntireDelay <= (170+25))
  1882  001144  BFFB               	btfsc	(DELAY_ms@cyclesRequiredForEntireDelay+3)& (0+255),7,b
  1883  001146  0012               	return	
  1884  001148  51FB               	movf	(DELAY_ms@cyclesRequiredForEntireDelay+3)& (0+255),w,b
  1885  00114A  11FA               	iorwf	(DELAY_ms@cyclesRequiredForEntireDelay+2)& (0+255),w,b
  1886  00114C  11F9               	iorwf	(DELAY_ms@cyclesRequiredForEntireDelay+1)& (0+255),w,b
  1887  00114E  E10F               	bnz	l43
  1888  001150  0EC4               	movlw	196
  1889  001152  5DF8               	subwf	DELAY_ms@cyclesRequiredForEntireDelay& (0+255),w,b
  1890  001154  A0D8               	btfss	status,0,c
  1891  001156  0012               	return	
  1892  001158  D00A               	goto	l43
  1893  00115A                     l44:
  1894                           
  1895                           ; BSR set to: 0
  1896                           ;delay.c: 128: {
  1897                           ;delay.c: 129: __nop();
  1898  00115A  F000               	nop	
  1899                           
  1900                           ;delay.c: 130: cyclesRequiredForEntireDelay -= 39;
  1901  00115C  0ED9               	movlw	217
  1902  00115E  0100               	movlb	0	; () banked
  1903  001160  27F8               	addwf	DELAY_ms@cyclesRequiredForEntireDelay& (0+255),f,b
  1904  001162  0EFF               	movlw	255
  1905  001164  23F9               	addwfc	(DELAY_ms@cyclesRequiredForEntireDelay+1)& (0+255),f,b
  1906  001166  0EFF               	movlw	255
  1907  001168  23FA               	addwfc	(DELAY_ms@cyclesRequiredForEntireDelay+2)& (0+255),f,b
  1908  00116A  0EFF               	movlw	255
  1909  00116C  23FB               	addwfc	(DELAY_ms@cyclesRequiredForEntireDelay+3)& (0+255),f,b
  1910  00116E                     l43:
  1911                           
  1912                           ; BSR set to: 0
  1913  00116E  BFFB               	btfsc	(DELAY_ms@cyclesRequiredForEntireDelay+3)& (0+255),7,b
  1914  001170  0012               	return	
  1915  001172  51FB               	movf	(DELAY_ms@cyclesRequiredForEntireDelay+3)& (0+255),w,b
  1916  001174  11FA               	iorwf	(DELAY_ms@cyclesRequiredForEntireDelay+2)& (0+255),w,b
  1917  001176  11F9               	iorwf	(DELAY_ms@cyclesRequiredForEntireDelay+1)& (0+255),w,b
  1918  001178  E1F0               	bnz	l44
  1919  00117A  05F8               	decf	DELAY_ms@cyclesRequiredForEntireDelay& (0+255),w,b
  1920  00117C  A0D8               	btfss	status,0,c
  1921  00117E  0012               	return	
  1922  001180  D7EC               	goto	l44
  1923  001182                     __end_of_DELAY_ms:
  1924                           	opt stack 0
  1925                           tblptru	equ	0xFF8
  1926                           tblptrh	equ	0xFF7
  1927                           tblptrl	equ	0xFF6
  1928                           tablat	equ	0xFF5
  1929                           intcon	equ	0xFF2
  1930                           intcon2	equ	0xFF1
  1931                           intcon3	equ	0xFF0
  1932                           postinc0	equ	0xFEE
  1933                           wreg	equ	0xFE8
  1934                           postdec1	equ	0xFE5
  1935                           fsr1l	equ	0xFE1
  1936                           status	equ	0xFD8
  1937                           
  1938 ;; *************** function ___lmul *****************
  1939 ;; Defined at:
  1940 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul32.c"
  1941 ;; Parameters:    Size  Location     Type
  1942 ;;  multiplier      4    0[BANK0 ] unsigned long 
  1943 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  1944 ;; Auto vars:     Size  Location     Type
  1945 ;;  product         4    8[BANK0 ] unsigned long 
  1946 ;; Return value:  Size  Location     Type
  1947 ;;                  4    0[BANK0 ] unsigned long 
  1948 ;; Registers used:
  1949 ;;		wreg, status,2, status,0
  1950 ;; Tracked objects:
  1951 ;;		On entry : 0/0
  1952 ;;		On exit  : 0/0
  1953 ;;		Unchanged: 0/0
  1954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1955 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1956 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1958 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1959 ;;Total ram usage:       12 bytes
  1960 ;; Hardware stack levels used:    1
  1961 ;; Hardware stack levels required when called:    5
  1962 ;; This function calls:
  1963 ;;		Nothing
  1964 ;; This function is called by:
  1965 ;;		_DELAY_ms
  1966 ;;		_DELAY_10us
  1967 ;; This function uses a non-reentrant model
  1968 ;;
  1969                           
  1970                           	psect	text10
  1971  00130E                     __ptext10:
  1972                           	opt stack 0
  1973  00130E                     ___lmul:
  1974                           	opt stack 22
  1975                           
  1976                           ; BSR set to: 0
  1977                           ;incstack = 0
  1978  00130E  0E00               	movlw	0
  1979  001310  0100               	movlb	0	; () banked
  1980  001312  6FF2               	movwf	___lmul@product& (0+255),b
  1981  001314  0E00               	movlw	0
  1982  001316  6FF3               	movwf	(___lmul@product+1)& (0+255),b
  1983  001318  0E00               	movlw	0
  1984  00131A  6FF4               	movwf	(___lmul@product+2)& (0+255),b
  1985  00131C  0E00               	movlw	0
  1986  00131E  6FF5               	movwf	(___lmul@product+3)& (0+255),b
  1987  001320                     
  1988                           ; BSR set to: 0
  1989                           
  1990                           ; BSR set to: 0
  1991  001320  A1EA               	btfss	___lmul@multiplier& (0+255),0,b
  1992  001322  D008               	goto	l1277
  1993                           
  1994                           ; BSR set to: 0
  1995  001324  51EE               	movf	___lmul@multiplicand& (0+255),w,b
  1996  001326  27F2               	addwf	___lmul@product& (0+255),f,b
  1997  001328  51EF               	movf	(___lmul@multiplicand+1)& (0+255),w,b
  1998  00132A  23F3               	addwfc	(___lmul@product+1)& (0+255),f,b
  1999  00132C  51F0               	movf	(___lmul@multiplicand+2)& (0+255),w,b
  2000  00132E  23F4               	addwfc	(___lmul@product+2)& (0+255),f,b
  2001  001330  51F1               	movf	(___lmul@multiplicand+3)& (0+255),w,b
  2002  001332  23F5               	addwfc	(___lmul@product+3)& (0+255),f,b
  2003  001334                     l1277:
  2004                           
  2005                           ; BSR set to: 0
  2006                           
  2007                           ; BSR set to: 0
  2008  001334  90D8               	bcf	status,0,c
  2009  001336  37EE               	rlcf	___lmul@multiplicand& (0+255),f,b
  2010  001338  37EF               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
  2011  00133A  37F0               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
  2012  00133C  37F1               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
  2013                           
  2014                           ; BSR set to: 0
  2015  00133E  90D8               	bcf	status,0,c
  2016  001340  33ED               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
  2017  001342  33EC               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
  2018  001344  33EB               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
  2019  001346  33EA               	rrcf	___lmul@multiplier& (0+255),f,b
  2020  001348  51EA               	movf	___lmul@multiplier& (0+255),w,b
  2021  00134A  11EB               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
  2022  00134C  11EC               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
  2023  00134E  11ED               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
  2024  001350  A4D8               	btfss	status,2,c
  2025  001352  D7E6               	goto	l1276
  2026                           
  2027                           ; BSR set to: 0
  2028  001354  C0F2  F0EA         	movff	___lmul@product,?___lmul
  2029  001358  C0F3  F0EB         	movff	___lmul@product+1,?___lmul+1
  2030  00135C  C0F4  F0EC         	movff	___lmul@product+2,?___lmul+2
  2031  001360  C0F5  F0ED         	movff	___lmul@product+3,?___lmul+3
  2032                           
  2033                           ; BSR set to: 0
  2034  001364  0012               	return		;funcret
  2035  001366                     __end_of___lmul:
  2036                           	opt stack 0
  2037                           tblptru	equ	0xFF8
  2038                           tblptrh	equ	0xFF7
  2039                           tblptrl	equ	0xFF6
  2040                           tablat	equ	0xFF5
  2041                           intcon	equ	0xFF2
  2042                           intcon2	equ	0xFF1
  2043                           intcon3	equ	0xFF0
  2044                           postinc0	equ	0xFEE
  2045                           wreg	equ	0xFE8
  2046                           postdec1	equ	0xFE5
  2047                           fsr1l	equ	0xFE1
  2048                           status	equ	0xFD8
  2049                           
  2050 ;; *************** function _high_isr *****************
  2051 ;; Defined at:
  2052 ;;		line 1852 in file "../MLA/framework/driver/mrf_miwi/src/drv_mrf_miwi_24j40.c"
  2053 ;; Parameters:    Size  Location     Type
  2054 ;;		None
  2055 ;; Auto vars:     Size  Location     Type
  2056 ;;  results         1   41[COMRAM] struct _DRIVER_UINT8_UNI
  2057 ;;  RxBank          1   44[COMRAM] unsigned char 
  2058 ;;  flags           2   42[COMRAM] struct .
  2059 ;;  i               1   45[COMRAM] unsigned char 
  2060 ;; Return value:  Size  Location     Type
  2061 ;;                  1    wreg      void 
  2062 ;; Registers used:
  2063 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2064 ;; Tracked objects:
  2065 ;;		On entry : 0/0
  2066 ;;		On exit  : 0/0
  2067 ;;		Unchanged: 0/0
  2068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2069 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2070 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2071 ;;      Temps:         23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2072 ;;      Totals:        28       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2073 ;;Total ram usage:       28 bytes
  2074 ;; Hardware stack levels used:    1
  2075 ;; Hardware stack levels required when called:    4
  2076 ;; This function calls:
  2077 ;;		_PHYGetLongRAMAddr
  2078 ;;		_PHYGetShortRAMAddr
  2079 ;;		_PHYSetShortRAMAddr
  2080 ;;		_UserInterruptHandler
  2081 ;; This function is called by:
  2082 ;;		Interrupt level 2
  2083 ;; This function uses a non-reentrant model
  2084 ;;
  2085                           
  2086                           	psect	intcode
  2087  000008                     __pintcode:
  2088                           	opt stack 0
  2089  000008                     _high_isr:
  2090                           	opt stack 22
  2091                           
  2092                           ; BSR set to: 0
  2093                           ;incstack = 0
  2094  000008  825D               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  2095  00000A  CFFA F018          	movff	pclath,??_high_isr+5
  2096  00000E  CFFB F019          	movff	pclatu,??_high_isr+6
  2097  000012  CFE9 F01A          	movff	fsr0l,??_high_isr+7
  2098  000016  CFEA F01B          	movff	fsr0h,??_high_isr+8
  2099  00001A  CFE1 F01C          	movff	fsr1l,??_high_isr+9
  2100  00001E  CFE2 F01D          	movff	fsr1h,??_high_isr+10
  2101  000022  CFD9 F01E          	movff	fsr2l,??_high_isr+11
  2102  000026  CFDA F01F          	movff	fsr2h,??_high_isr+12
  2103  00002A  CFF3 F020          	movff	prodl,??_high_isr+13
  2104  00002E  CFF4 F021          	movff	prodh,??_high_isr+14
  2105  000032  CFF6 F022          	movff	tblptrl,??_high_isr+15
  2106  000036  CFF7 F023          	movff	tblptrh,??_high_isr+16
  2107  00003A  CFF8 F024          	movff	tblptru,??_high_isr+17
  2108  00003E  CFF5 F025          	movff	tablat,??_high_isr+18
  2109  000042  C05D  F026         	movff	btemp,??_high_isr+19
  2110  000046  C05E  F027         	movff	btemp+1,??_high_isr+20
  2111  00004A  C05F  F028         	movff	btemp+2,??_high_isr+21
  2112  00004E  C060  F029         	movff	btemp+3,??_high_isr+22
  2113                           
  2114                           ;drv_mrf_miwi_24j40.c: 1867: if (INTCON3bits.INT1IE && INTCON3bits.INT1IF)
  2115  000052  B6F0               	btfsc	intcon3,3,c	;volatile
  2116  000054  A0F0               	btfss	intcon3,0,c	;volatile
  2117  000056  D0AB               	goto	i2l1035
  2118                           
  2119                           ;drv_mrf_miwi_24j40.c: 1868: {
  2120                           ;drv_mrf_miwi_24j40.c: 1869: uint8_t i;
  2121                           ;drv_mrf_miwi_24j40.c: 1873: INTCON3bits.INT1IF = 0;
  2122  000058  90F0               	bcf	intcon3,0,c	;volatile
  2123                           
  2124                           ;drv_mrf_miwi_24j40.c: 1877: {
  2125                           ;drv_mrf_miwi_24j40.c: 1878: MRF24J40_IFREG flags;
  2126                           ;drv_mrf_miwi_24j40.c: 1881: flags.Val = PHYGetShortRAMAddr((0x62));
  2127  00005A  0E62               	movlw	98
  2128  00005C  EC5E  F00A         	call	_PHYGetShortRAMAddr
  2129  000060  6E2B               	movwf	high_isr@flags,c
  2130                           
  2131                           ;drv_mrf_miwi_24j40.c: 1883: if (flags.bits.RF_TXIF)
  2132  000062  A02B               	btfss	high_isr@flags,0,c
  2133  000064  D011               	goto	i2l1022
  2134                           
  2135                           ;drv_mrf_miwi_24j40.c: 1884: {
  2136                           ;drv_mrf_miwi_24j40.c: 1887: MRF24J40Status.bits.TX_BUSY = 0;
  2137  000066  9043               	bcf	_MRF24J40Status,0,c	;volatile
  2138                           
  2139                           ;drv_mrf_miwi_24j40.c: 1889: if (MRF24J40Status.bits.SEC_IF)
  2140  000068  BC43               	btfsc	_MRF24J40Status,6,c	;volatile
  2141                           
  2142                           ;drv_mrf_miwi_24j40.c: 1890: {
  2143                           ;drv_mrf_miwi_24j40.c: 1891: MRF24J40Status.bits.SEC_IF = 0;
  2144  00006A  9C43               	bcf	_MRF24J40Status,6,c	;volatile
  2145                           
  2146                           ;drv_mrf_miwi_24j40.c: 1892: }
  2147                           ;drv_mrf_miwi_24j40.c: 1894: failureCounter = 0;
  2148  00006C  0E00               	movlw	0
  2149  00006E  0100               	movlb	0	; () banked
  2150  000070  6F92               	movwf	(_failureCounter+1)& (0+255),b	;volatile
  2151  000072  0E00               	movlw	0
  2152  000074  6F91               	movwf	_failureCounter& (0+255),b	;volatile
  2153                           
  2154                           ; BSR set to: 0
  2155                           ;drv_mrf_miwi_24j40.c: 1898: if (MRF24J40Status.bits.TX_PENDING_ACK)
  2156  000076  A243               	btfss	_MRF24J40Status,1,c	;volatile
  2157  000078  D007               	goto	i2l1022
  2158                           
  2159                           ; BSR set to: 0
  2160                           ;drv_mrf_miwi_24j40.c: 1899: {
  2161                           ;drv_mrf_miwi_24j40.c: 1900: DRIVER_UINT8_UNION results;
  2162                           ;drv_mrf_miwi_24j40.c: 1903: results.Val = PHYGetShortRAMAddr((0x48));
  2163  00007A  0E48               	movlw	72
  2164  00007C  EC5E  F00A         	call	_PHYGetShortRAMAddr
  2165  000080  6E2A               	movwf	high_isr@results,c
  2166                           
  2167                           ;drv_mrf_miwi_24j40.c: 1905: if (results.bits.b0 == 1)
  2168  000082  B02A               	btfsc	high_isr@results,0,c
  2169                           
  2170                           ;drv_mrf_miwi_24j40.c: 1906: {
  2171                           ;drv_mrf_miwi_24j40.c: 1909: MRF24J40Status.bits.TX_FAIL = 1;
  2172  000084  8443               	bsf	_MRF24J40Status,2,c	;volatile
  2173                           
  2174                           ;drv_mrf_miwi_24j40.c: 1910: }
  2175                           ;drv_mrf_miwi_24j40.c: 1914: MRF24J40Status.bits.TX_PENDING_ACK = 0;
  2176  000086  9243               	bcf	_MRF24J40Status,1,c	;volatile
  2177  000088                     i2l1022:
  2178                           
  2179                           ;drv_mrf_miwi_24j40.c: 1916: }
  2180                           ;drv_mrf_miwi_24j40.c: 1918: }
  2181                           ;drv_mrf_miwi_24j40.c: 1920: if (flags.bits.RF_RXIF)
  2182  000088  A62B               	btfss	high_isr@flags,3,c
  2183  00008A  D08A               	goto	i2l1034
  2184                           
  2185                           ;drv_mrf_miwi_24j40.c: 1921: {
  2186                           ;drv_mrf_miwi_24j40.c: 1922: uint8_t RxBank = 0xFF;
  2187  00008C  682D               	setf	high_isr@RxBank,c
  2188                           
  2189                           ;drv_mrf_miwi_24j40.c: 1924: for (i = 0; i < 2; i++)
  2190  00008E  0E00               	movlw	0
  2191  000090  6E2E               	movwf	high_isr@i,c
  2192  000092                     i2l8619:
  2193  000092  0E01               	movlw	1
  2194  000094  642E               	cpfsgt	high_isr@i,c
  2195  000096  D001               	goto	i2l1025
  2196  000098  D010               	goto	i2u952_40
  2197  00009A                     i2l1025:
  2198                           
  2199                           ;drv_mrf_miwi_24j40.c: 1925: {
  2200                           ;drv_mrf_miwi_24j40.c: 1926: if (RxBuffer[i].PayloadLen == 0)
  2201  00009A  502E               	movf	high_isr@i,w,c
  2202  00009C  0D50               	mullw	80
  2203  00009E  0E00               	movlw	low _RxBuffer
  2204  0000A0  24F3               	addwf	prodl,w,c
  2205  0000A2  6ED9               	movwf	fsr2l,c
  2206  0000A4  0E02               	movlw	high _RxBuffer
  2207  0000A6  20F4               	addwfc	prodh,w,c
  2208  0000A8  6EDA               	movwf	fsr2h,c
  2209  0000AA  50DF               	movf	indf2,w,c
  2210  0000AC  A4D8               	btfss	status,2,c
  2211  0000AE  D003               	goto	i2l1027
  2212                           
  2213                           ;drv_mrf_miwi_24j40.c: 1927: {
  2214                           ;drv_mrf_miwi_24j40.c: 1928: RxBank = i;
  2215  0000B0  C02E  F02D         	movff	high_isr@i,high_isr@RxBank
  2216                           
  2217                           ;drv_mrf_miwi_24j40.c: 1929: break;
  2218  0000B4  D002               	goto	i2u952_40
  2219  0000B6                     i2l1027:
  2220  0000B6  2A2E               	incf	high_isr@i,f,c
  2221  0000B8  D7EC               	goto	i2l8619
  2222  0000BA                     i2u952_40:
  2223                           
  2224                           ;drv_mrf_miwi_24j40.c: 1930: }
  2225                           ;drv_mrf_miwi_24j40.c: 1931: }
  2226                           ;drv_mrf_miwi_24j40.c: 1934: if (RxBank < 2)
  2227  0000BA  0E02               	movlw	2
  2228  0000BC  602D               	cpfslt	high_isr@RxBank,c
  2229  0000BE  D06B               	goto	i2l1028
  2230                           
  2231                           ;drv_mrf_miwi_24j40.c: 1935: {
  2232                           ;drv_mrf_miwi_24j40.c: 1941: PHYSetShortRAMAddr((0x73), 0x04);
  2233  0000C0  0E04               	movlw	4
  2234  0000C2  6E03               	movwf	PHYSetShortRAMAddr@value,c
  2235  0000C4  0E73               	movlw	115
  2236  0000C6  EC73  F00A         	call	_PHYSetShortRAMAddr
  2237                           
  2238                           ;drv_mrf_miwi_24j40.c: 1945: RxBuffer[RxBank].PayloadLen = PHYGetLongRAMAddr(0x300) + 2;
  2239  0000CA  502D               	movf	high_isr@RxBank,w,c
  2240  0000CC  0D50               	mullw	80
  2241  0000CE  0E00               	movlw	low _RxBuffer
  2242  0000D0  24F3               	addwf	prodl,w,c
  2243  0000D2  6ED9               	movwf	fsr2l,c
  2244  0000D4  0E02               	movlw	high _RxBuffer
  2245  0000D6  20F4               	addwfc	prodh,w,c
  2246  0000D8  6EDA               	movwf	fsr2h,c
  2247  0000DA  0E03               	movlw	3
  2248  0000DC  6E04               	movwf	PHYGetLongRAMAddr@address+1,c
  2249  0000DE  0E00               	movlw	0
  2250  0000E0  6E03               	movwf	PHYGetLongRAMAddr@address,c
  2251  0000E2  ECDE  F009         	call	_PHYGetLongRAMAddr	;wreg free
  2252  0000E6  0F02               	addlw	2
  2253  0000E8  6EDF               	movwf	indf2,c
  2254                           
  2255                           ;drv_mrf_miwi_24j40.c: 1946: if (RxBuffer[RxBank].PayloadLen < (40+11+8+8+12))
  2256  0000EA  502D               	movf	high_isr@RxBank,w,c
  2257  0000EC  0D50               	mullw	80
  2258  0000EE  0E00               	movlw	low _RxBuffer
  2259  0000F0  24F3               	addwf	prodl,w,c
  2260  0000F2  6ED9               	movwf	fsr2l,c
  2261  0000F4  0E02               	movlw	high _RxBuffer
  2262  0000F6  20F4               	addwfc	prodh,w,c
  2263  0000F8  6EDA               	movwf	fsr2h,c
  2264  0000FA  0E4F               	movlw	79
  2265  0000FC  60DF               	cpfslt	indf2,c
  2266  0000FE  D040               	goto	i2l1029
  2267                           
  2268                           ;drv_mrf_miwi_24j40.c: 1947: {
  2269                           ;drv_mrf_miwi_24j40.c: 1949: MRF24J40Status.bits.RX_BUFFERED = 1;
  2270  000100  8A43               	bsf	_MRF24J40Status,5,c	;volatile
  2271                           
  2272                           ;drv_mrf_miwi_24j40.c: 1952: for (i = 1; i <= RxBuffer[RxBank].PayloadLen + 2; i++)
  2273  000102  0E01               	movlw	1
  2274  000104  6E2E               	movwf	high_isr@i,c
  2275  000106  D01A               	goto	i2l1030
  2276  000108                     
  2277                           ;drv_mrf_miwi_24j40.c: 1953: {
  2278                           ;drv_mrf_miwi_24j40.c: 1954: RxBuffer[RxBank].Payload[i - 1] = PHYGetLongRAMAddr(0x300 +
      +                           i);
  2279  000108  502D               	movf	high_isr@RxBank,w,c
  2280  00010A  0D50               	mullw	80
  2281  00010C  0E00               	movlw	low _RxBuffer
  2282  00010E  6E13               	movwf	??_high_isr& (0+255),c
  2283  000110  0E02               	movlw	high _RxBuffer
  2284  000112  6E14               	movwf	(??_high_isr+1)& (0+255),c
  2285  000114  50F3               	movf	prodl,w,c
  2286  000116  2613               	addwf	??_high_isr,f,c
  2287  000118  50F4               	movf	prodh,w,c
  2288  00011A  2214               	addwfc	??_high_isr+1,f,c
  2289  00011C  502E               	movf	high_isr@i,w,c
  2290  00011E  2413               	addwf	??_high_isr,w,c
  2291  000120  6ED9               	movwf	fsr2l,c
  2292  000122  0E00               	movlw	0
  2293  000124  2014               	addwfc	??_high_isr+1,w,c
  2294  000126  6EDA               	movwf	fsr2h,c
  2295  000128  0E00               	movlw	0
  2296  00012A  242E               	addwf	high_isr@i,w,c
  2297  00012C  6E03               	movwf	PHYGetLongRAMAddr@address,c
  2298  00012E  6A04               	clrf	PHYGetLongRAMAddr@address+1,c
  2299  000130  0E03               	movlw	3
  2300  000132  2204               	addwfc	PHYGetLongRAMAddr@address+1,f,c
  2301  000134  ECDE  F009         	call	_PHYGetLongRAMAddr	;wreg free
  2302  000138  6EDF               	movwf	indf2,c
  2303  00013A  2A2E               	incf	high_isr@i,f,c
  2304  00013C                     i2l1030:
  2305  00013C  502E               	movf	high_isr@i,w,c
  2306  00013E  6E13               	movwf	??_high_isr& (0+255),c
  2307  000140  6A14               	clrf	(??_high_isr+1)& (0+255),c
  2308  000142  502D               	movf	high_isr@RxBank,w,c
  2309  000144  0D50               	mullw	80
  2310  000146  0E00               	movlw	low _RxBuffer
  2311  000148  24F3               	addwf	prodl,w,c
  2312  00014A  6ED9               	movwf	fsr2l,c
  2313  00014C  0E02               	movlw	high _RxBuffer
  2314  00014E  20F4               	addwfc	prodh,w,c
  2315  000150  6EDA               	movwf	fsr2h,c
  2316  000152  50DF               	movf	indf2,w,c
  2317  000154  6E15               	movwf	(??_high_isr+2)& (0+255),c
  2318  000156  6A16               	clrf	(??_high_isr+3)& (0+255),c
  2319  000158  0E02               	movlw	2
  2320  00015A  2615               	addwf	??_high_isr+2,f,c
  2321  00015C  0E00               	movlw	0
  2322  00015E  2216               	addwfc	??_high_isr+3,f,c
  2323  000160  5013               	movf	??_high_isr,w,c
  2324  000162  5C15               	subwf	??_high_isr+2,w,c
  2325  000164  5016               	movf	??_high_isr+3,w,c
  2326  000166  0A80               	xorlw	128
  2327  000168  6E17               	movwf	(??_high_isr+4)& (0+255),c
  2328  00016A  5014               	movf	??_high_isr+1,w,c
  2329  00016C  0A80               	xorlw	128
  2330  00016E  5817               	subwfb	(??_high_isr+4)& (0+255),w,c
  2331  000170  B0D8               	btfsc	status,0,c
  2332  000172  D7CA               	goto	i2l1031
  2333                           
  2334                           ;drv_mrf_miwi_24j40.c: 1955: }
  2335                           ;drv_mrf_miwi_24j40.c: 1956: PHYSetShortRAMAddr((0x1B), 0x01);
  2336  000174  0E01               	movlw	1
  2337  000176  6E03               	movwf	PHYSetShortRAMAddr@value,c
  2338  000178  0E1B               	movlw	27
  2339  00017A  EC73  F00A         	call	_PHYSetShortRAMAddr
  2340                           
  2341                           ;drv_mrf_miwi_24j40.c: 1957: } else
  2342  00017E  D005               	goto	i2l1033
  2343  000180                     i2l1029:
  2344                           
  2345                           ;drv_mrf_miwi_24j40.c: 1958: {
  2346                           ;drv_mrf_miwi_24j40.c: 1961: PHYSetShortRAMAddr((0x1B), 0x01);
  2347  000180  0E01               	movlw	1
  2348  000182  6E03               	movwf	PHYSetShortRAMAddr@value,c
  2349  000184  0E1B               	movlw	27
  2350  000186  EC73  F00A         	call	_PHYSetShortRAMAddr
  2351  00018A                     i2l1033:
  2352                           
  2353                           ;drv_mrf_miwi_24j40.c: 1962: }
  2354                           ;drv_mrf_miwi_24j40.c: 1965: PHYSetShortRAMAddr((0x73), 0x00);
  2355  00018A  0E00               	movlw	0
  2356  00018C  6E03               	movwf	PHYSetShortRAMAddr@value,c
  2357  00018E  0E73               	movlw	115
  2358  000190  EC73  F00A         	call	_PHYSetShortRAMAddr
  2359                           
  2360                           ;drv_mrf_miwi_24j40.c: 1966: } else
  2361  000194  D005               	goto	i2l1034
  2362  000196                     i2l1028:
  2363                           
  2364                           ;drv_mrf_miwi_24j40.c: 1967: {
  2365                           ;drv_mrf_miwi_24j40.c: 1970: PHYSetShortRAMAddr((0x1B), 0x01);
  2366  000196  0E01               	movlw	1
  2367  000198  6E03               	movwf	PHYSetShortRAMAddr@value,c
  2368  00019A  0E1B               	movlw	27
  2369  00019C  EC73  F00A         	call	_PHYSetShortRAMAddr
  2370  0001A0                     i2l1034:
  2371                           
  2372                           ;drv_mrf_miwi_24j40.c: 1977: }
  2373                           ;drv_mrf_miwi_24j40.c: 1979: }
  2374                           ;drv_mrf_miwi_24j40.c: 1982: if (flags.bits.SECIF)
  2375  0001A0  A82B               	btfss	high_isr@flags,4,c
  2376  0001A2  D005               	goto	i2l1035
  2377                           
  2378                           ;drv_mrf_miwi_24j40.c: 1983: {
  2379                           ;drv_mrf_miwi_24j40.c: 1984: PHYSetShortRAMAddr((0x59), 0x80);
  2380  0001A4  0E80               	movlw	128
  2381  0001A6  6E03               	movwf	PHYSetShortRAMAddr@value,c
  2382  0001A8  0E59               	movlw	89
  2383  0001AA  EC73  F00A         	call	_PHYSetShortRAMAddr
  2384  0001AE                     i2l1035:
  2385                           
  2386                           ;drv_mrf_miwi_24j40.c: 1985: }
  2387                           ;drv_mrf_miwi_24j40.c: 1986: }
  2388                           ;drv_mrf_miwi_24j40.c: 1987: }
  2389                           ;drv_mrf_miwi_24j40.c: 1992: if (PIR1bits.TMR1IF)
  2390  0001AE  B09E               	btfsc	3998,0,c	;volatile
  2391                           
  2392                           ;drv_mrf_miwi_24j40.c: 1993: {
  2393                           ;drv_mrf_miwi_24j40.c: 1994: if (PIE1bits.TMR1IE)
  2394  0001B0  A09D               	btfss	3997,0,c	;volatile
  2395  0001B2  D007               	goto	i2l1038
  2396                           
  2397                           ;drv_mrf_miwi_24j40.c: 1995: {
  2398                           ;drv_mrf_miwi_24j40.c: 1997: PIR1bits.TMR1IF = 0;
  2399  0001B4  909E               	bcf	3998,0,c	;volatile
  2400                           
  2401                           ;drv_mrf_miwi_24j40.c: 1998: timerExtension1++;
  2402  0001B6  2A4B               	incf	_timerExtension1,f,c	;volatile
  2403                           
  2404                           ;drv_mrf_miwi_24j40.c: 1999: if (timerExtension1 == 0)
  2405  0001B8  504B               	movf	_timerExtension1,w,c	;volatile
  2406  0001BA  A4D8               	btfss	status,2,c
  2407  0001BC  D002               	goto	i2l1038
  2408                           
  2409                           ;drv_mrf_miwi_24j40.c: 2000: {
  2410                           ;drv_mrf_miwi_24j40.c: 2001: timerExtension2++;
  2411  0001BE  0100               	movlb	0	; () banked
  2412  0001C0  2B9A               	incf	_timerExtension2& (0+255),f,b	;volatile
  2413  0001C2                     i2l1038:
  2414                           
  2415                           ;drv_mrf_miwi_24j40.c: 2002: }
  2416                           ;drv_mrf_miwi_24j40.c: 2003: }
  2417                           ;drv_mrf_miwi_24j40.c: 2004: }
  2418                           ;drv_mrf_miwi_24j40.c: 2006: UserInterruptHandler();
  2419                           
  2420                           ; BSR set to: 0
  2421                           
  2422                           ; BSR set to: 0
  2423                           
  2424                           ; BSR set to: 0
  2425  0001C2  ECB2  F00A         	call	_UserInterruptHandler	;wreg free
  2426                           
  2427                           ;drv_mrf_miwi_24j40.c: 2009: return;
  2428  0001C6  C029  F060         	movff	??_high_isr+22,btemp+3
  2429  0001CA  C028  F05F         	movff	??_high_isr+21,btemp+2
  2430  0001CE  C027  F05E         	movff	??_high_isr+20,btemp+1
  2431  0001D2  C026  F05D         	movff	??_high_isr+19,btemp
  2432  0001D6  C025  FFF5         	movff	??_high_isr+18,tablat
  2433  0001DA  C024  FFF8         	movff	??_high_isr+17,tblptru
  2434  0001DE  C023  FFF7         	movff	??_high_isr+16,tblptrh
  2435  0001E2  C022  FFF6         	movff	??_high_isr+15,tblptrl
  2436  0001E6  C021  FFF4         	movff	??_high_isr+14,prodh
  2437  0001EA  C020  FFF3         	movff	??_high_isr+13,prodl
  2438  0001EE  C01F  FFDA         	movff	??_high_isr+12,fsr2h
  2439  0001F2  C01E  FFD9         	movff	??_high_isr+11,fsr2l
  2440  0001F6  C01D  FFE2         	movff	??_high_isr+10,fsr1h
  2441  0001FA  C01C  FFE1         	movff	??_high_isr+9,fsr1l
  2442  0001FE  C01B  FFEA         	movff	??_high_isr+8,fsr0h
  2443  000202  C01A  FFE9         	movff	??_high_isr+7,fsr0l
  2444  000206  C019  FFFB         	movff	??_high_isr+6,pclatu
  2445  00020A  C018  FFFA         	movff	??_high_isr+5,pclath
  2446  00020E  925D               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  2447  000210  0011               	retfie		f
  2448  000212                     __end_of_high_isr:
  2449                           	opt stack 0
  2450                           pclatu	equ	0xFFB
  2451                           pclath	equ	0xFFA
  2452                           tblptru	equ	0xFF8
  2453                           tblptrh	equ	0xFF7
  2454                           tblptrl	equ	0xFF6
  2455                           tablat	equ	0xFF5
  2456                           prodh	equ	0xFF4
  2457                           prodl	equ	0xFF3
  2458                           intcon	equ	0xFF2
  2459                           intcon2	equ	0xFF1
  2460                           intcon3	equ	0xFF0
  2461                           postinc0	equ	0xFEE
  2462                           fsr0h	equ	0xFEA
  2463                           fsr0l	equ	0xFE9
  2464                           wreg	equ	0xFE8
  2465                           postdec1	equ	0xFE5
  2466                           fsr1h	equ	0xFE2
  2467                           fsr1l	equ	0xFE1
  2468                           indf2	equ	0xFDF
  2469                           fsr2h	equ	0xFDA
  2470                           fsr2l	equ	0xFD9
  2471                           status	equ	0xFD8
  2472                           
  2473 ;; *************** function _UserInterruptHandler *****************
  2474 ;; Defined at:
  2475 ;;		line 345 in file "8bitswdk_pic18f46j50_24j40/firmware/src/system_config/8bitwdk_pic18f46j50_24j40/lcd.c"
  2476 ;; Parameters:    Size  Location     Type
  2477 ;;		None
  2478 ;; Auto vars:     Size  Location     Type
  2479 ;;		None
  2480 ;; Return value:  Size  Location     Type
  2481 ;;                  1    wreg      void 
  2482 ;; Registers used:
  2483 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2484 ;; Tracked objects:
  2485 ;;		On entry : 0/0
  2486 ;;		On exit  : 0/0
  2487 ;;		Unchanged: 0/0
  2488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2489 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2490 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2491 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2492 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2493 ;;Total ram usage:        0 bytes
  2494 ;; Hardware stack levels used:    1
  2495 ;; Hardware stack levels required when called:    3
  2496 ;; This function calls:
  2497 ;;		_I2CTask
  2498 ;;		i2_DELAY_ms
  2499 ;; This function is called by:
  2500 ;;		_high_isr
  2501 ;; This function uses a non-reentrant model
  2502 ;;
  2503                           
  2504                           	psect	text12
  2505  001564                     __ptext12:
  2506                           	opt stack 0
  2507  001564                     _UserInterruptHandler:
  2508                           	opt stack 22
  2509                           
  2510                           ;lcd.c: 348: if( PIR3bits.SSP2IF )
  2511                           
  2512                           ;incstack = 0
  2513  001564  AEA4               	btfss	4004,7,c	;volatile
  2514  001566  0012               	return	
  2515                           
  2516                           ;lcd.c: 349: {
  2517                           ;lcd.c: 350: PIR3bits.SSP2IF = 0;
  2518  001568  9EA4               	bcf	4004,7,c	;volatile
  2519                           
  2520                           ;lcd.c: 351: I2CTask();
  2521  00156A  ECD6  F007         	call	_I2CTask	;wreg free
  2522                           
  2523                           ;lcd.c: 352: DELAY_ms(5);
  2524  00156E  0E00               	movlw	0
  2525  001570  6E0E               	movwf	i2DELAY_ms@ms+1,c
  2526  001572  0E05               	movlw	5
  2527  001574  6E0D               	movwf	i2DELAY_ms@ms,c
  2528  001576  ECC1  F008         	call	i2_DELAY_ms	;wreg free
  2529  00157A  0012               	return	
  2530  00157C                     __end_of_UserInterruptHandler:
  2531                           	opt stack 0
  2532                           pclatu	equ	0xFFB
  2533                           pclath	equ	0xFFA
  2534                           tblptru	equ	0xFF8
  2535                           tblptrh	equ	0xFF7
  2536                           tblptrl	equ	0xFF6
  2537                           tablat	equ	0xFF5
  2538                           prodh	equ	0xFF4
  2539                           prodl	equ	0xFF3
  2540                           intcon	equ	0xFF2
  2541                           intcon2	equ	0xFF1
  2542                           intcon3	equ	0xFF0
  2543                           postinc0	equ	0xFEE
  2544                           fsr0h	equ	0xFEA
  2545                           fsr0l	equ	0xFE9
  2546                           wreg	equ	0xFE8
  2547                           postdec1	equ	0xFE5
  2548                           fsr1h	equ	0xFE2
  2549                           fsr1l	equ	0xFE1
  2550                           indf2	equ	0xFDF
  2551                           fsr2h	equ	0xFDA
  2552                           fsr2l	equ	0xFD9
  2553                           status	equ	0xFD8
  2554                           
  2555 ;; *************** function _I2CTask *****************
  2556 ;; Defined at:
  2557 ;;		line 65 in file "8bitswdk_pic18f46j50_24j40/firmware/src/system_config/8bitwdk_pic18f46j50_24j40/lcd.c"
  2558 ;; Parameters:    Size  Location     Type
  2559 ;;		None
  2560 ;; Auto vars:     Size  Location     Type
  2561 ;;		None
  2562 ;; Return value:  Size  Location     Type
  2563 ;;                  1    wreg      void 
  2564 ;; Registers used:
  2565 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2566 ;; Tracked objects:
  2567 ;;		On entry : 0/0
  2568 ;;		On exit  : 0/0
  2569 ;;		Unchanged: 0/0
  2570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2571 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2572 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2573 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2574 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2575 ;;Total ram usage:        0 bytes
  2576 ;; Hardware stack levels used:    1
  2577 ;; Hardware stack levels required when called:    2
  2578 ;; This function calls:
  2579 ;;		i2_DELAY_ms
  2580 ;; This function is called by:
  2581 ;;		_UserInterruptHandler
  2582 ;; This function uses a non-reentrant model
  2583 ;;
  2584                           
  2585                           	psect	text13
  2586  000FAC                     __ptext13:
  2587                           	opt stack 0
  2588  000FAC                     _I2CTask:
  2589                           	opt stack 22
  2590                           
  2591                           ;lcd.c: 68: if( CommandPtr < CommandLen || TextPtr < TextLen )
  2592                           
  2593                           ;incstack = 0
  2594  000FAC  504F               	movf	_CommandLen,w,c
  2595  000FAE  5C4D               	subwf	_CommandPtr,w,c
  2596  000FB0  A0D8               	btfss	status,0,c
  2597  000FB2  D004               	goto	i2u535_40
  2598  000FB4  504E               	movf	_TextLen,w,c
  2599  000FB6  5C4C               	subwf	_TextPtr,w,c
  2600  000FB8  B0D8               	btfsc	status,0,c
  2601  000FBA  0012               	return	
  2602  000FBC                     i2u535_40:
  2603                           
  2604                           ;lcd.c: 69: {
  2605                           ;lcd.c: 70: while (SSP2CON2bits.SEN == 1);
  2606  000FBC  B071               	btfsc	3953,0,c	;volatile
  2607  000FBE  D7FE               	goto	i2u535_40
  2608                           
  2609                           ;lcd.c: 71: if( CommandPtr < CommandLen )
  2610  000FC0  504F               	movf	_CommandLen,w,c
  2611  000FC2  5C4D               	subwf	_CommandPtr,w,c
  2612  000FC4  B0D8               	btfsc	status,0,c
  2613  000FC6  D01A               	goto	i2l90
  2614                           
  2615                           ;lcd.c: 72: {
  2616                           ;lcd.c: 73: SSP2BUF = LCDCommand[CommandPtr];
  2617  000FC8  504D               	movf	_CommandPtr,w,c
  2618  000FCA  0D01               	mullw	1
  2619  000FCC  0E82               	movlw	low _LCDCommand
  2620  000FCE  24F3               	addwf	prodl,w,c
  2621  000FD0  6ED9               	movwf	fsr2l,c
  2622  000FD2  0E00               	movlw	high _LCDCommand
  2623  000FD4  20F4               	addwfc	prodh,w,c
  2624  000FD6  6EDA               	movwf	fsr2h,c
  2625  000FD8  50DF               	movf	indf2,w,c
  2626  000FDA  6E75               	movwf	3957,c	;volatile
  2627                           
  2628                           ;lcd.c: 75: {
  2629                           ;lcd.c: 76: CommandPtr++;
  2630  000FDC  2A4D               	incf	_CommandPtr,f,c
  2631                           
  2632                           ;lcd.c: 77: }
  2633                           ;lcd.c: 78: if( CommandPtr == CommandLen && TextLen == 0 )
  2634  000FDE  504F               	movf	_CommandLen,w,c
  2635  000FE0  184D               	xorwf	_CommandPtr,w,c
  2636  000FE2  A4D8               	btfss	status,2,c
  2637  000FE4  0012               	return	
  2638  000FE6  504E               	movf	_TextLen,w,c
  2639  000FE8  A4D8               	btfss	status,2,c
  2640  000FEA  0012               	return	
  2641                           
  2642                           ;lcd.c: 79: {
  2643                           ;lcd.c: 81: SSP2CON2bits.PEN = 1;
  2644  000FEC  8471               	bsf	3953,2,c	;volatile
  2645                           
  2646                           ;lcd.c: 82: DELAY_ms(300);
  2647  000FEE  0E01               	movlw	1
  2648  000FF0  6E0E               	movwf	i2DELAY_ms@ms+1,c
  2649  000FF2  0E2C               	movlw	44
  2650  000FF4  6E0D               	movwf	i2DELAY_ms@ms,c
  2651  000FF6  ECC1  F008         	call	i2_DELAY_ms	;wreg free
  2652                           
  2653                           ;lcd.c: 83: }
  2654                           ;lcd.c: 84: }
  2655  000FFA  0012               	return	
  2656  000FFC                     i2l90:
  2657                           
  2658                           ;lcd.c: 85: else if( TextPtr < TextLen )
  2659  000FFC  504E               	movf	_TextLen,w,c
  2660  000FFE  5C4C               	subwf	_TextPtr,w,c
  2661  001000  B0D8               	btfsc	status,0,c
  2662  001002  0012               	return	
  2663                           
  2664                           ;lcd.c: 86: {
  2665                           ;lcd.c: 87: if( LCDText[TextPtr] == 0 )
  2666  001004  504C               	movf	_TextPtr,w,c
  2667  001006  0D01               	mullw	1
  2668  001008  0E7B               	movlw	low _LCDText
  2669  00100A  24F3               	addwf	prodl,w,c
  2670  00100C  6ED9               	movwf	fsr2l,c
  2671  00100E  0E01               	movlw	high _LCDText
  2672  001010  20F4               	addwfc	prodh,w,c
  2673  001012  6EDA               	movwf	fsr2h,c
  2674  001014  50DF               	movf	indf2,w,c
  2675  001016  A4D8               	btfss	status,2,c
  2676  001018  D00A               	goto	i2l94
  2677                           
  2678                           ;lcd.c: 88: {
  2679                           ;lcd.c: 89: LCDText[TextPtr] = ' ';
  2680  00101A  504C               	movf	_TextPtr,w,c
  2681  00101C  0D01               	mullw	1
  2682  00101E  0E7B               	movlw	low _LCDText
  2683  001020  24F3               	addwf	prodl,w,c
  2684  001022  6ED9               	movwf	fsr2l,c
  2685  001024  0E01               	movlw	high _LCDText
  2686  001026  20F4               	addwfc	prodh,w,c
  2687  001028  6EDA               	movwf	fsr2h,c
  2688  00102A  0E20               	movlw	32
  2689  00102C  6EDF               	movwf	indf2,c
  2690  00102E                     i2l94:
  2691                           
  2692                           ;lcd.c: 90: }
  2693                           ;lcd.c: 91: SSP2BUF = LCDText[TextPtr];
  2694  00102E  504C               	movf	_TextPtr,w,c
  2695  001030  0D01               	mullw	1
  2696  001032  0E7B               	movlw	low _LCDText
  2697  001034  24F3               	addwf	prodl,w,c
  2698  001036  6ED9               	movwf	fsr2l,c
  2699  001038  0E01               	movlw	high _LCDText
  2700  00103A  20F4               	addwfc	prodh,w,c
  2701  00103C  6EDA               	movwf	fsr2h,c
  2702  00103E  50DF               	movf	indf2,w,c
  2703  001040  6E75               	movwf	3957,c	;volatile
  2704                           
  2705                           ;lcd.c: 94: {
  2706                           ;lcd.c: 95: TextPtr++;
  2707  001042  2A4C               	incf	_TextPtr,f,c
  2708                           
  2709                           ;lcd.c: 96: }
  2710                           ;lcd.c: 97: if( TextPtr == TextLen )
  2711  001044  504E               	movf	_TextLen,w,c
  2712  001046  184C               	xorwf	_TextPtr,w,c
  2713  001048  A4D8               	btfss	status,2,c
  2714  00104A  0012               	return	
  2715                           
  2716                           ;lcd.c: 98: {
  2717                           ;lcd.c: 100: SSP2CON2bits.PEN = 1;
  2718  00104C  8471               	bsf	3953,2,c	;volatile
  2719                           
  2720                           ;lcd.c: 101: DELAY_ms(300);
  2721  00104E  0E01               	movlw	1
  2722  001050  6E0E               	movwf	i2DELAY_ms@ms+1,c
  2723  001052  0E2C               	movlw	44
  2724  001054  6E0D               	movwf	i2DELAY_ms@ms,c
  2725  001056  ECC1  F008         	call	i2_DELAY_ms	;wreg free
  2726  00105A  0012               	return	
  2727  00105C                     __end_of_I2CTask:
  2728                           	opt stack 0
  2729                           pclatu	equ	0xFFB
  2730                           pclath	equ	0xFFA
  2731                           tblptru	equ	0xFF8
  2732                           tblptrh	equ	0xFF7
  2733                           tblptrl	equ	0xFF6
  2734                           tablat	equ	0xFF5
  2735                           prodh	equ	0xFF4
  2736                           prodl	equ	0xFF3
  2737                           intcon	equ	0xFF2
  2738                           intcon2	equ	0xFF1
  2739                           intcon3	equ	0xFF0
  2740                           postinc0	equ	0xFEE
  2741                           fsr0h	equ	0xFEA
  2742                           fsr0l	equ	0xFE9
  2743                           wreg	equ	0xFE8
  2744                           postdec1	equ	0xFE5
  2745                           fsr1h	equ	0xFE2
  2746                           fsr1l	equ	0xFE1
  2747                           indf2	equ	0xFDF
  2748                           fsr2h	equ	0xFDA
  2749                           fsr2l	equ	0xFD9
  2750                           status	equ	0xFD8
  2751                           
  2752 ;; *************** function i2_DELAY_ms *****************
  2753 ;; Defined at:
  2754 ;;		line 108 in file "8bitswdk_pic18f46j50_24j40/firmware/src/system_config/8bitwdk_pic18f46j50_24j40/delay.c"
  2755 ;; Parameters:    Size  Location     Type
  2756 ;;  ms              2   12[COMRAM] unsigned int 
  2757 ;; Auto vars:     Size  Location     Type
  2758 ;;  DELAY_ms        4   14[COMRAM] long 
  2759 ;; Return value:  Size  Location     Type
  2760 ;;                  1    wreg      void 
  2761 ;; Registers used:
  2762 ;;		wreg, status,2, status,0, cstack
  2763 ;; Tracked objects:
  2764 ;;		On entry : 0/0
  2765 ;;		On exit  : 0/0
  2766 ;;		Unchanged: 0/0
  2767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2768 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2769 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2770 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2771 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2772 ;;Total ram usage:        6 bytes
  2773 ;; Hardware stack levels used:    1
  2774 ;; Hardware stack levels required when called:    1
  2775 ;; This function calls:
  2776 ;;		i2___lmul
  2777 ;; This function is called by:
  2778 ;;		_I2CTask
  2779 ;;		_UserInterruptHandler
  2780 ;; This function uses a non-reentrant model
  2781 ;;
  2782                           
  2783                           	psect	text14
  2784  001182                     __ptext14:
  2785                           	opt stack 0
  2786  001182                     i2_DELAY_ms:
  2787                           	opt stack 23
  2788                           
  2789                           ;delay.c: 112: int32_t cyclesRequiredForEntireDelay = 0;
  2790                           
  2791                           ;incstack = 0
  2792  001182  0E00               	movlw	0
  2793  001184  6E0F               	movwf	i2DELAY_ms@cyclesRequiredForEntireDelay,c
  2794  001186  0E00               	movlw	0
  2795  001188  6E10               	movwf	i2DELAY_ms@cyclesRequiredForEntireDelay+1,c
  2796  00118A  0E00               	movlw	0
  2797  00118C  6E11               	movwf	i2DELAY_ms@cyclesRequiredForEntireDelay+2,c
  2798  00118E  0E00               	movlw	0
  2799  001190  6E12               	movwf	i2DELAY_ms@cyclesRequiredForEntireDelay+3,c
  2800                           
  2801                           ;delay.c: 115: cyclesRequiredForEntireDelay = (signed long)(((8000000/2*4)/4)/1000) * ms
      +                          ;
  2802  001192  C00D  F001         	movff	i2DELAY_ms@ms,i2___lmul@multiplier
  2803  001196  C00E  F002         	movff	i2DELAY_ms@ms+1,i2___lmul@multiplier+1
  2804  00119A  6A03               	clrf	i2___lmul@multiplier+2,c
  2805  00119C  6A04               	clrf	i2___lmul@multiplier+3,c
  2806  00119E  0EA0               	movlw	160
  2807  0011A0  6E05               	movwf	i2___lmul@multiplicand,c
  2808  0011A2  0E0F               	movlw	15
  2809  0011A4  6E06               	movwf	i2___lmul@multiplicand+1,c
  2810  0011A6  0E00               	movlw	0
  2811  0011A8  6E07               	movwf	i2___lmul@multiplicand+2,c
  2812  0011AA  0E00               	movlw	0
  2813  0011AC  6E08               	movwf	i2___lmul@multiplicand+3,c
  2814  0011AE  ECB3  F009         	call	i2___lmul	;wreg free
  2815  0011B2  C001  F00F         	movff	?i2___lmul,i2DELAY_ms@cyclesRequiredForEntireDelay
  2816  0011B6  C002  F010         	movff	?i2___lmul+1,i2DELAY_ms@cyclesRequiredForEntireDelay+1
  2817  0011BA  C003  F011         	movff	?i2___lmul+2,i2DELAY_ms@cyclesRequiredForEntireDelay+2
  2818  0011BE  C004  F012         	movff	?i2___lmul+3,i2DELAY_ms@cyclesRequiredForEntireDelay+3
  2819                           
  2820                           ;delay.c: 119: cyclesRequiredForEntireDelay -= (148 + 22);
  2821  0011C2  0E56               	movlw	86
  2822  0011C4  260F               	addwf	i2DELAY_ms@cyclesRequiredForEntireDelay,f,c
  2823  0011C6  0EFF               	movlw	255
  2824  0011C8  2210               	addwfc	i2DELAY_ms@cyclesRequiredForEntireDelay+1,f,c
  2825  0011CA  0EFF               	movlw	255
  2826  0011CC  2211               	addwfc	i2DELAY_ms@cyclesRequiredForEntireDelay+2,f,c
  2827  0011CE  0EFF               	movlw	255
  2828  0011D0  2212               	addwfc	i2DELAY_ms@cyclesRequiredForEntireDelay+3,f,c
  2829                           
  2830                           ;delay.c: 121: if (cyclesRequiredForEntireDelay <= (170+25))
  2831  0011D2  BE12               	btfsc	i2DELAY_ms@cyclesRequiredForEntireDelay+3,7,c
  2832  0011D4  0012               	return	
  2833  0011D6  5012               	movf	i2DELAY_ms@cyclesRequiredForEntireDelay+3,w,c
  2834  0011D8  1011               	iorwf	i2DELAY_ms@cyclesRequiredForEntireDelay+2,w,c
  2835  0011DA  1010               	iorwf	i2DELAY_ms@cyclesRequiredForEntireDelay+1,w,c
  2836  0011DC  E10E               	bnz	i2l43
  2837  0011DE  0EC4               	movlw	196
  2838  0011E0  5C0F               	subwf	i2DELAY_ms@cyclesRequiredForEntireDelay,w,c
  2839  0011E2  A0D8               	btfss	status,0,c
  2840  0011E4  0012               	return	
  2841  0011E6  D009               	goto	i2l43
  2842  0011E8                     i2l44:
  2843                           
  2844                           ;delay.c: 128: {
  2845                           ;delay.c: 129: __nop();
  2846  0011E8  F000               	nop	
  2847                           
  2848                           ;delay.c: 130: cyclesRequiredForEntireDelay -= 39;
  2849  0011EA  0ED9               	movlw	217
  2850  0011EC  260F               	addwf	i2DELAY_ms@cyclesRequiredForEntireDelay,f,c
  2851  0011EE  0EFF               	movlw	255
  2852  0011F0  2210               	addwfc	i2DELAY_ms@cyclesRequiredForEntireDelay+1,f,c
  2853  0011F2  0EFF               	movlw	255
  2854  0011F4  2211               	addwfc	i2DELAY_ms@cyclesRequiredForEntireDelay+2,f,c
  2855  0011F6  0EFF               	movlw	255
  2856  0011F8  2212               	addwfc	i2DELAY_ms@cyclesRequiredForEntireDelay+3,f,c
  2857  0011FA                     i2l43:
  2858  0011FA  BE12               	btfsc	i2DELAY_ms@cyclesRequiredForEntireDelay+3,7,c
  2859  0011FC  0012               	return	
  2860  0011FE  5012               	movf	i2DELAY_ms@cyclesRequiredForEntireDelay+3,w,c
  2861  001200  1011               	iorwf	i2DELAY_ms@cyclesRequiredForEntireDelay+2,w,c
  2862  001202  1010               	iorwf	i2DELAY_ms@cyclesRequiredForEntireDelay+1,w,c
  2863  001204  E1F1               	bnz	i2l44
  2864  001206  040F               	decf	i2DELAY_ms@cyclesRequiredForEntireDelay,w,c
  2865  001208  A0D8               	btfss	status,0,c
  2866  00120A  0012               	return	
  2867  00120C  D7ED               	goto	i2l44
  2868  00120E                     __end_ofi2_DELAY_ms:
  2869                           	opt stack 0
  2870                           pclatu	equ	0xFFB
  2871                           pclath	equ	0xFFA
  2872                           tblptru	equ	0xFF8
  2873                           tblptrh	equ	0xFF7
  2874                           tblptrl	equ	0xFF6
  2875                           tablat	equ	0xFF5
  2876                           prodh	equ	0xFF4
  2877                           prodl	equ	0xFF3
  2878                           intcon	equ	0xFF2
  2879                           intcon2	equ	0xFF1
  2880                           intcon3	equ	0xFF0
  2881                           postinc0	equ	0xFEE
  2882                           fsr0h	equ	0xFEA
  2883                           fsr0l	equ	0xFE9
  2884                           wreg	equ	0xFE8
  2885                           postdec1	equ	0xFE5
  2886                           fsr1h	equ	0xFE2
  2887                           fsr1l	equ	0xFE1
  2888                           indf2	equ	0xFDF
  2889                           fsr2h	equ	0xFDA
  2890                           fsr2l	equ	0xFD9
  2891                           status	equ	0xFD8
  2892                           
  2893 ;; *************** function i2___lmul *****************
  2894 ;; Defined at:
  2895 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul32.c"
  2896 ;; Parameters:    Size  Location     Type
  2897 ;;  multiplier      4    0[COMRAM] unsigned long 
  2898 ;;  multiplicand    4    4[COMRAM] unsigned long 
  2899 ;; Auto vars:     Size  Location     Type
  2900 ;;  __lmul          4    8[COMRAM] unsigned long 
  2901 ;; Return value:  Size  Location     Type
  2902 ;;                  4    0[COMRAM] unsigned long 
  2903 ;; Registers used:
  2904 ;;		wreg, status,2, status,0
  2905 ;; Tracked objects:
  2906 ;;		On entry : 0/0
  2907 ;;		On exit  : 0/0
  2908 ;;		Unchanged: 0/0
  2909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2910 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2911 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2913 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2914 ;;Total ram usage:       12 bytes
  2915 ;; Hardware stack levels used:    1
  2916 ;; This function calls:
  2917 ;;		Nothing
  2918 ;; This function is called by:
  2919 ;;		i2_DELAY_ms
  2920 ;; This function uses a non-reentrant model
  2921 ;;
  2922                           
  2923                           	psect	text15
  2924  001366                     __ptext15:
  2925                           	opt stack 0
  2926  001366                     i2___lmul:
  2927                           	opt stack 23
  2928                           
  2929                           ;incstack = 0
  2930  001366  0E00               	movlw	0
  2931  001368  6E09               	movwf	i2___lmul@product,c
  2932  00136A  0E00               	movlw	0
  2933  00136C  6E0A               	movwf	i2___lmul@product+1,c
  2934  00136E  0E00               	movlw	0
  2935  001370  6E0B               	movwf	i2___lmul@product+2,c
  2936  001372  0E00               	movlw	0
  2937  001374  6E0C               	movwf	i2___lmul@product+3,c
  2938  001376  A001               	btfss	i2___lmul@multiplier,0,c
  2939  001378  D008               	goto	i2l1277
  2940  00137A  5005               	movf	i2___lmul@multiplicand,w,c
  2941  00137C  2609               	addwf	i2___lmul@product,f,c
  2942  00137E  5006               	movf	i2___lmul@multiplicand+1,w,c
  2943  001380  220A               	addwfc	i2___lmul@product+1,f,c
  2944  001382  5007               	movf	i2___lmul@multiplicand+2,w,c
  2945  001384  220B               	addwfc	i2___lmul@product+2,f,c
  2946  001386  5008               	movf	i2___lmul@multiplicand+3,w,c
  2947  001388  220C               	addwfc	i2___lmul@product+3,f,c
  2948  00138A                     i2l1277:
  2949  00138A  90D8               	bcf	status,0,c
  2950  00138C  3605               	rlcf	i2___lmul@multiplicand,f,c
  2951  00138E  3606               	rlcf	i2___lmul@multiplicand+1,f,c
  2952  001390  3607               	rlcf	i2___lmul@multiplicand+2,f,c
  2953  001392  3608               	rlcf	i2___lmul@multiplicand+3,f,c
  2954  001394  90D8               	bcf	status,0,c
  2955  001396  3204               	rrcf	i2___lmul@multiplier+3,f,c
  2956  001398  3203               	rrcf	i2___lmul@multiplier+2,f,c
  2957  00139A  3202               	rrcf	i2___lmul@multiplier+1,f,c
  2958  00139C  3201               	rrcf	i2___lmul@multiplier,f,c
  2959  00139E  5001               	movf	i2___lmul@multiplier,w,c
  2960  0013A0  1002               	iorwf	i2___lmul@multiplier+1,w,c
  2961  0013A2  1003               	iorwf	i2___lmul@multiplier+2,w,c
  2962  0013A4  1004               	iorwf	i2___lmul@multiplier+3,w,c
  2963  0013A6  A4D8               	btfss	status,2,c
  2964  0013A8  D7E6               	goto	i2l1276
  2965  0013AA  C009  F001         	movff	i2___lmul@product,?i2___lmul
  2966  0013AE  C00A  F002         	movff	i2___lmul@product+1,?i2___lmul+1
  2967  0013B2  C00B  F003         	movff	i2___lmul@product+2,?i2___lmul+2
  2968  0013B6  C00C  F004         	movff	i2___lmul@product+3,?i2___lmul+3
  2969  0013BA  0012               	return		;funcret
  2970  0013BC                     __end_ofi2___lmul:
  2971                           	opt stack 0
  2972                           pclatu	equ	0xFFB
  2973                           pclath	equ	0xFFA
  2974                           tblptru	equ	0xFF8
  2975                           tblptrh	equ	0xFF7
  2976                           tblptrl	equ	0xFF6
  2977                           tablat	equ	0xFF5
  2978                           prodh	equ	0xFF4
  2979                           prodl	equ	0xFF3
  2980                           intcon	equ	0xFF2
  2981                           intcon2	equ	0xFF1
  2982                           intcon3	equ	0xFF0
  2983                           postinc0	equ	0xFEE
  2984                           fsr0h	equ	0xFEA
  2985                           fsr0l	equ	0xFE9
  2986                           wreg	equ	0xFE8
  2987                           postdec1	equ	0xFE5
  2988                           fsr1h	equ	0xFE2
  2989                           fsr1l	equ	0xFE1
  2990                           indf2	equ	0xFDF
  2991                           fsr2h	equ	0xFDA
  2992                           fsr2l	equ	0xFD9
  2993                           status	equ	0xFD8
  2994                           
  2995 ;; *************** function _PHYSetShortRAMAddr *****************
  2996 ;; Defined at:
  2997 ;;		line 124 in file "../MLA/framework/driver/mrf_miwi/src/drv_mrf_miwi_24j40.c"
  2998 ;; Parameters:    Size  Location     Type
  2999 ;;  address         1    wreg     unsigned char 
  3000 ;;  value           1    2[COMRAM] unsigned char 
  3001 ;; Auto vars:     Size  Location     Type
  3002 ;;  address         1    3[COMRAM] unsigned char 
  3003 ;;  tmpRFIE         1    4[COMRAM] volatile unsigned char 
  3004 ;; Return value:  Size  Location     Type
  3005 ;;                  1    wreg      void 
  3006 ;; Registers used:
  3007 ;;		wreg, status,2, cstack
  3008 ;; Tracked objects:
  3009 ;;		On entry : 0/0
  3010 ;;		On exit  : 0/0
  3011 ;;		Unchanged: 0/0
  3012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3013 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3014 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3016 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3017 ;;Total ram usage:        3 bytes
  3018 ;; Hardware stack levels used:    1
  3019 ;; Hardware stack levels required when called:    1
  3020 ;; This function calls:
  3021 ;;		_SPIPut
  3022 ;; This function is called by:
  3023 ;;		_high_isr
  3024 ;;		_InitMRF24J40
  3025 ;;		_MiMAC_SendPacket
  3026 ;;		_MiMAC_SetChannel
  3027 ;;		_MiMAC_SetAltAddress
  3028 ;; This function uses a non-reentrant model
  3029 ;;
  3030                           
  3031                           	psect	text16
  3032  0014E6                     __ptext16:
  3033                           	opt stack 0
  3034  0014E6                     _PHYSetShortRAMAddr:
  3035                           	opt stack 24
  3036                           
  3037                           ;incstack = 0
  3038                           ;PHYSetShortRAMAddr@address stored from wreg
  3039  0014E6  6E04               	movwf	PHYSetShortRAMAddr@address,c
  3040                           
  3041                           ;drv_mrf_miwi_24j40.c: 126: volatile uint8_t tmpRFIE = INTCON3bits.INT1IE;
  3042  0014E8  0E00               	movlw	0
  3043  0014EA  B6F0               	btfsc	intcon3,3,c	;volatile
  3044  0014EC  0E01               	movlw	1
  3045  0014EE  6E05               	movwf	PHYSetShortRAMAddr@tmpRFIE,c	;volatile
  3046                           
  3047                           ;drv_mrf_miwi_24j40.c: 128: INTCON3bits.INT1IE = 0;
  3048  0014F0  96F0               	bcf	intcon3,3,c	;volatile
  3049                           
  3050                           ;drv_mrf_miwi_24j40.c: 129: LATBbits.LATB3 = 0;
  3051  0014F2  968A               	bcf	3978,3,c	;volatile
  3052                           
  3053                           ;drv_mrf_miwi_24j40.c: 130: SPIPut(address);
  3054  0014F4  5004               	movf	PHYSetShortRAMAddr@address,w,c
  3055  0014F6  ECA5  F00A         	call	_SPIPut
  3056                           
  3057                           ;drv_mrf_miwi_24j40.c: 131: SPIPut(value);
  3058  0014FA  5003               	movf	PHYSetShortRAMAddr@value,w,c
  3059  0014FC  ECA5  F00A         	call	_SPIPut
  3060                           
  3061                           ;drv_mrf_miwi_24j40.c: 132: LATBbits.LATB3 = 1;
  3062  001500  868A               	bsf	3978,3,c	;volatile
  3063                           
  3064                           ;drv_mrf_miwi_24j40.c: 133: INTCON3bits.INT1IE = tmpRFIE;
  3065  001502  B005               	btfsc	PHYSetShortRAMAddr@tmpRFIE,0,c	;volatile
  3066  001504  D002               	bra	i2u701_45
  3067  001506  96F0               	bcf	intcon3,3,c	;volatile
  3068  001508  D001               	bra	i2u701_46
  3069  00150A                     i2u701_45:
  3070  00150A  86F0               	bsf	intcon3,3,c	;volatile
  3071  00150C                     i2u701_46:
  3072  00150C  0012               	return		;funcret
  3073  00150E                     __end_of_PHYSetShortRAMAddr:
  3074                           	opt stack 0
  3075                           pclatu	equ	0xFFB
  3076                           pclath	equ	0xFFA
  3077                           tblptru	equ	0xFF8
  3078                           tblptrh	equ	0xFF7
  3079                           tblptrl	equ	0xFF6
  3080                           tablat	equ	0xFF5
  3081                           prodh	equ	0xFF4
  3082                           prodl	equ	0xFF3
  3083                           intcon	equ	0xFF2
  3084                           intcon2	equ	0xFF1
  3085                           intcon3	equ	0xFF0
  3086                           postinc0	equ	0xFEE
  3087                           fsr0h	equ	0xFEA
  3088                           fsr0l	equ	0xFE9
  3089                           wreg	equ	0xFE8
  3090                           postdec1	equ	0xFE5
  3091                           fsr1h	equ	0xFE2
  3092                           fsr1l	equ	0xFE1
  3093                           indf2	equ	0xFDF
  3094                           fsr2h	equ	0xFDA
  3095                           fsr2l	equ	0xFD9
  3096                           status	equ	0xFD8
  3097                           
  3098 ;; *************** function _PHYGetShortRAMAddr *****************
  3099 ;; Defined at:
  3100 ;;		line 154 in file "../MLA/framework/driver/mrf_miwi/src/drv_mrf_miwi_24j40.c"
  3101 ;; Parameters:    Size  Location     Type
  3102 ;;  address         1    wreg     unsigned char 
  3103 ;; Auto vars:     Size  Location     Type
  3104 ;;  address         1    2[COMRAM] unsigned char 
  3105 ;;  tmpRFIE         1    4[COMRAM] volatile unsigned char 
  3106 ;;  toReturn        1    3[COMRAM] unsigned char 
  3107 ;; Return value:  Size  Location     Type
  3108 ;;                  1    wreg      unsigned char 
  3109 ;; Registers used:
  3110 ;;		wreg, status,2, cstack
  3111 ;; Tracked objects:
  3112 ;;		On entry : 0/0
  3113 ;;		On exit  : 0/0
  3114 ;;		Unchanged: 0/0
  3115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3116 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3117 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3118 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3119 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3120 ;;Total ram usage:        3 bytes
  3121 ;; Hardware stack levels used:    1
  3122 ;; Hardware stack levels required when called:    2
  3123 ;; This function calls:
  3124 ;;		_SPIGet
  3125 ;;		_SPIPut
  3126 ;; This function is called by:
  3127 ;;		_high_isr
  3128 ;;		_InitMRF24J40
  3129 ;; This function uses a non-reentrant model
  3130 ;;
  3131                           
  3132                           	psect	text17
  3133  0014BC                     __ptext17:
  3134                           	opt stack 0
  3135  0014BC                     _PHYGetShortRAMAddr:
  3136                           	opt stack 23
  3137                           
  3138                           ;incstack = 0
  3139                           ;PHYGetShortRAMAddr@address stored from wreg
  3140  0014BC  6E03               	movwf	PHYGetShortRAMAddr@address,c
  3141                           
  3142                           ;drv_mrf_miwi_24j40.c: 156: uint8_t toReturn;
  3143                           ;drv_mrf_miwi_24j40.c: 157: volatile uint8_t tmpRFIE = INTCON3bits.INT1IE;
  3144  0014BE  0E00               	movlw	0
  3145  0014C0  B6F0               	btfsc	intcon3,3,c	;volatile
  3146  0014C2  0E01               	movlw	1
  3147  0014C4  6E05               	movwf	PHYGetShortRAMAddr@tmpRFIE,c	;volatile
  3148                           
  3149                           ;drv_mrf_miwi_24j40.c: 159: INTCON3bits.INT1IE = 0;
  3150  0014C6  96F0               	bcf	intcon3,3,c	;volatile
  3151                           
  3152                           ;drv_mrf_miwi_24j40.c: 160: LATBbits.LATB3 = 0;
  3153  0014C8  968A               	bcf	3978,3,c	;volatile
  3154                           
  3155                           ;drv_mrf_miwi_24j40.c: 161: SPIPut(address);
  3156  0014CA  5003               	movf	PHYGetShortRAMAddr@address,w,c
  3157  0014CC  ECA5  F00A         	call	_SPIPut
  3158                           
  3159                           ;drv_mrf_miwi_24j40.c: 162: toReturn = SPIGet();
  3160  0014D0  ECC5  F00A         	call	_SPIGet	;wreg free
  3161  0014D4  6E04               	movwf	PHYGetShortRAMAddr@toReturn,c
  3162                           
  3163                           ;drv_mrf_miwi_24j40.c: 163: LATBbits.LATB3 = 1;
  3164  0014D6  868A               	bsf	3978,3,c	;volatile
  3165                           
  3166                           ;drv_mrf_miwi_24j40.c: 164: INTCON3bits.INT1IE = tmpRFIE;
  3167  0014D8  B005               	btfsc	PHYGetShortRAMAddr@tmpRFIE,0,c	;volatile
  3168  0014DA  D002               	bra	i2u702_45
  3169  0014DC  96F0               	bcf	intcon3,3,c	;volatile
  3170  0014DE  D001               	bra	i2u702_46
  3171  0014E0                     i2u702_45:
  3172  0014E0  86F0               	bsf	intcon3,3,c	;volatile
  3173  0014E2                     i2u702_46:
  3174                           
  3175                           ;drv_mrf_miwi_24j40.c: 166: return toReturn;
  3176  0014E2  5004               	movf	PHYGetShortRAMAddr@toReturn,w,c
  3177  0014E4  0012               	return	
  3178  0014E6                     __end_of_PHYGetShortRAMAddr:
  3179                           	opt stack 0
  3180                           pclatu	equ	0xFFB
  3181                           pclath	equ	0xFFA
  3182                           tblptru	equ	0xFF8
  3183                           tblptrh	equ	0xFF7
  3184                           tblptrl	equ	0xFF6
  3185                           tablat	equ	0xFF5
  3186                           prodh	equ	0xFF4
  3187                           prodl	equ	0xFF3
  3188                           intcon	equ	0xFF2
  3189                           intcon2	equ	0xFF1
  3190                           intcon3	equ	0xFF0
  3191                           postinc0	equ	0xFEE
  3192                           fsr0h	equ	0xFEA
  3193                           fsr0l	equ	0xFE9
  3194                           wreg	equ	0xFE8
  3195                           postdec1	equ	0xFE5
  3196                           fsr1h	equ	0xFE2
  3197                           fsr1l	equ	0xFE1
  3198                           indf2	equ	0xFDF
  3199                           fsr2h	equ	0xFDA
  3200                           fsr2l	equ	0xFD9
  3201                           status	equ	0xFD8
  3202                           
  3203 ;; *************** function _PHYGetLongRAMAddr *****************
  3204 ;; Defined at:
  3205 ;;		line 185 in file "../MLA/framework/driver/mrf_miwi/src/drv_mrf_miwi_24j40.c"
  3206 ;; Parameters:    Size  Location     Type
  3207 ;;  address         2    2[COMRAM] unsigned int 
  3208 ;; Auto vars:     Size  Location     Type
  3209 ;;  tmpRFIE         1    7[COMRAM] volatile unsigned char 
  3210 ;;  toReturn        1    6[COMRAM] unsigned char 
  3211 ;; Return value:  Size  Location     Type
  3212 ;;                  1    wreg      unsigned char 
  3213 ;; Registers used:
  3214 ;;		wreg, status,2, status,0, cstack
  3215 ;; Tracked objects:
  3216 ;;		On entry : 0/0
  3217 ;;		On exit  : 0/0
  3218 ;;		Unchanged: 0/0
  3219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3220 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3221 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3222 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3223 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3224 ;;Total ram usage:        6 bytes
  3225 ;; Hardware stack levels used:    1
  3226 ;; Hardware stack levels required when called:    2
  3227 ;; This function calls:
  3228 ;;		_SPIGet
  3229 ;;		_SPIPut
  3230 ;; This function is called by:
  3231 ;;		_high_isr
  3232 ;;		_InitMRF24J40
  3233 ;; This function uses a non-reentrant model
  3234 ;;
  3235                           
  3236                           	psect	text18
  3237  0013BC                     __ptext18:
  3238                           	opt stack 0
  3239  0013BC                     _PHYGetLongRAMAddr:
  3240                           	opt stack 23
  3241                           
  3242                           ;drv_mrf_miwi_24j40.c: 187: uint8_t toReturn;
  3243                           ;drv_mrf_miwi_24j40.c: 188: volatile uint8_t tmpRFIE = INTCON3bits.INT1IE;
  3244                           
  3245                           ;incstack = 0
  3246  0013BC  0E00               	movlw	0
  3247  0013BE  B6F0               	btfsc	intcon3,3,c	;volatile
  3248  0013C0  0E01               	movlw	1
  3249  0013C2  6E08               	movwf	PHYGetLongRAMAddr@tmpRFIE,c	;volatile
  3250                           
  3251                           ;drv_mrf_miwi_24j40.c: 190: INTCON3bits.INT1IE = 0;
  3252  0013C4  96F0               	bcf	intcon3,3,c	;volatile
  3253                           
  3254                           ;drv_mrf_miwi_24j40.c: 191: LATBbits.LATB3 = 0;
  3255  0013C6  968A               	bcf	3978,3,c	;volatile
  3256                           
  3257                           ;drv_mrf_miwi_24j40.c: 192: SPIPut(((address >> 3)&0x7F) | 0x80);
  3258  0013C8  C003  F005         	movff	PHYGetLongRAMAddr@address,??_PHYGetLongRAMAddr
  3259  0013CC  C004  F006         	movff	PHYGetLongRAMAddr@address+1,??_PHYGetLongRAMAddr+1
  3260  0013D0  90D8               	bcf	status,0,c
  3261  0013D2  3206               	rrcf	??_PHYGetLongRAMAddr+1,f,c
  3262  0013D4  3205               	rrcf	??_PHYGetLongRAMAddr,f,c
  3263  0013D6  90D8               	bcf	status,0,c
  3264  0013D8  3206               	rrcf	??_PHYGetLongRAMAddr+1,f,c
  3265  0013DA  3205               	rrcf	??_PHYGetLongRAMAddr,f,c
  3266  0013DC  90D8               	bcf	status,0,c
  3267  0013DE  3206               	rrcf	??_PHYGetLongRAMAddr+1,f,c
  3268  0013E0  3205               	rrcf	??_PHYGetLongRAMAddr,f,c
  3269  0013E2  5005               	movf	??_PHYGetLongRAMAddr,w,c
  3270  0013E4  0B7F               	andlw	127
  3271  0013E6  0980               	iorlw	128
  3272  0013E8  ECA5  F00A         	call	_SPIPut
  3273                           
  3274                           ;drv_mrf_miwi_24j40.c: 193: SPIPut(((address << 5)&0xE0));
  3275  0013EC  3803               	swapf	PHYGetLongRAMAddr@address,w,c
  3276  0013EE  46E8               	rlncf	wreg,f,c
  3277  0013F0  0BE0               	andlw	224
  3278  0013F2  0BE0               	andlw	224
  3279  0013F4  ECA5  F00A         	call	_SPIPut
  3280                           
  3281                           ;drv_mrf_miwi_24j40.c: 194: toReturn = SPIGet();
  3282  0013F8  ECC5  F00A         	call	_SPIGet	;wreg free
  3283  0013FC  6E07               	movwf	PHYGetLongRAMAddr@toReturn,c
  3284                           
  3285                           ;drv_mrf_miwi_24j40.c: 195: LATBbits.LATB3 = 1;
  3286  0013FE  868A               	bsf	3978,3,c	;volatile
  3287                           
  3288                           ;drv_mrf_miwi_24j40.c: 196: INTCON3bits.INT1IE = tmpRFIE;
  3289  001400  B008               	btfsc	PHYGetLongRAMAddr@tmpRFIE,0,c	;volatile
  3290  001402  D002               	bra	i2u703_45
  3291  001404  96F0               	bcf	intcon3,3,c	;volatile
  3292  001406  D001               	bra	i2u703_46
  3293  001408                     i2u703_45:
  3294  001408  86F0               	bsf	intcon3,3,c	;volatile
  3295  00140A                     i2u703_46:
  3296                           
  3297                           ;drv_mrf_miwi_24j40.c: 198: return toReturn;
  3298  00140A  5007               	movf	PHYGetLongRAMAddr@toReturn,w,c
  3299  00140C  0012               	return	
  3300  00140E                     __end_of_PHYGetLongRAMAddr:
  3301                           	opt stack 0
  3302                           pclatu	equ	0xFFB
  3303                           pclath	equ	0xFFA
  3304                           tblptru	equ	0xFF8
  3305                           tblptrh	equ	0xFF7
  3306                           tblptrl	equ	0xFF6
  3307                           tablat	equ	0xFF5
  3308                           prodh	equ	0xFF4
  3309                           prodl	equ	0xFF3
  3310                           intcon	equ	0xFF2
  3311                           intcon2	equ	0xFF1
  3312                           intcon3	equ	0xFF0
  3313                           postinc0	equ	0xFEE
  3314                           fsr0h	equ	0xFEA
  3315                           fsr0l	equ	0xFE9
  3316                           wreg	equ	0xFE8
  3317                           postdec1	equ	0xFE5
  3318                           fsr1h	equ	0xFE2
  3319                           fsr1l	equ	0xFE1
  3320                           indf2	equ	0xFDF
  3321                           fsr2h	equ	0xFDA
  3322                           fsr2l	equ	0xFD9
  3323                           status	equ	0xFD8
  3324                           
  3325 ;; *************** function _SPIGet *****************
  3326 ;; Defined at:
  3327 ;;		line 102 in file "8bitswdk_pic18f46j50_24j40/firmware/src/system_config/8bitwdk_pic18f46j50_24j40/spi.c"
  3328 ;; Parameters:    Size  Location     Type
  3329 ;;		None
  3330 ;; Auto vars:     Size  Location     Type
  3331 ;;		None
  3332 ;; Return value:  Size  Location     Type
  3333 ;;                  1    wreg      unsigned char 
  3334 ;; Registers used:
  3335 ;;		wreg, status,2, cstack
  3336 ;; Tracked objects:
  3337 ;;		On entry : 0/0
  3338 ;;		On exit  : 0/0
  3339 ;;		Unchanged: 0/0
  3340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3341 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3342 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3343 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3344 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3345 ;;Total ram usage:        0 bytes
  3346 ;; Hardware stack levels used:    1
  3347 ;; Hardware stack levels required when called:    1
  3348 ;; This function calls:
  3349 ;;		_SPIPut
  3350 ;; This function is called by:
  3351 ;;		_PHYGetShortRAMAddr
  3352 ;;		_PHYGetLongRAMAddr
  3353 ;; This function uses a non-reentrant model
  3354 ;;
  3355                           
  3356                           	psect	text19
  3357  00158A                     __ptext19:
  3358                           	opt stack 0
  3359  00158A                     _SPIGet:
  3360                           	opt stack 23
  3361                           
  3362                           ;spi.c: 123: SPIPut(0x00);
  3363                           
  3364                           ;incstack = 0
  3365  00158A  0E00               	movlw	0
  3366  00158C  ECA5  F00A         	call	_SPIPut
  3367                           
  3368                           ;spi.c: 124: return SSP1BUF;
  3369  001590  50C9               	movf	4041,w,c	;volatile
  3370  001592  0012               	return	
  3371  001594                     __end_of_SPIGet:
  3372                           	opt stack 0
  3373                           pclatu	equ	0xFFB
  3374                           pclath	equ	0xFFA
  3375                           tblptru	equ	0xFF8
  3376                           tblptrh	equ	0xFF7
  3377                           tblptrl	equ	0xFF6
  3378                           tablat	equ	0xFF5
  3379                           prodh	equ	0xFF4
  3380                           prodl	equ	0xFF3
  3381                           intcon	equ	0xFF2
  3382                           intcon2	equ	0xFF1
  3383                           intcon3	equ	0xFF0
  3384                           postinc0	equ	0xFEE
  3385                           fsr0h	equ	0xFEA
  3386                           fsr0l	equ	0xFE9
  3387                           wreg	equ	0xFE8
  3388                           postdec1	equ	0xFE5
  3389                           fsr1h	equ	0xFE2
  3390                           fsr1l	equ	0xFE1
  3391                           indf2	equ	0xFDF
  3392                           fsr2h	equ	0xFDA
  3393                           fsr2l	equ	0xFD9
  3394                           status	equ	0xFD8
  3395                           
  3396 ;; *************** function _SPIPut *****************
  3397 ;; Defined at:
  3398 ;;		line 45 in file "8bitswdk_pic18f46j50_24j40/firmware/src/system_config/8bitwdk_pic18f46j50_24j40/spi.c"
  3399 ;; Parameters:    Size  Location     Type
  3400 ;;  v               1    wreg     unsigned char 
  3401 ;; Auto vars:     Size  Location     Type
  3402 ;;  v               1    1[COMRAM] unsigned char 
  3403 ;;  i               1    0[COMRAM] unsigned char 
  3404 ;; Return value:  Size  Location     Type
  3405 ;;                  1    wreg      void 
  3406 ;; Registers used:
  3407 ;;		wreg
  3408 ;; Tracked objects:
  3409 ;;		On entry : 0/0
  3410 ;;		On exit  : 0/0
  3411 ;;		Unchanged: 0/0
  3412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3413 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3414 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3415 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3416 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3417 ;;Total ram usage:        2 bytes
  3418 ;; Hardware stack levels used:    1
  3419 ;; This function calls:
  3420 ;;		Nothing
  3421 ;; This function is called by:
  3422 ;;		_SPIGet
  3423 ;;		_PHYSetShortRAMAddr
  3424 ;;		_PHYGetShortRAMAddr
  3425 ;;		_PHYGetLongRAMAddr
  3426 ;;		_PHYSetLongRAMAddr
  3427 ;; This function uses a non-reentrant model
  3428 ;;
  3429                           
  3430                           	psect	text20
  3431  00154A                     __ptext20:
  3432                           	opt stack 0
  3433  00154A                     _SPIPut:
  3434                           	opt stack 24
  3435                           
  3436                           ;incstack = 0
  3437                           ;SPIPut@v stored from wreg
  3438  00154A  6E02               	movwf	SPIPut@v,c
  3439                           
  3440                           ;spi.c: 64: {
  3441                           ;spi.c: 66: uint8_t i;
  3442                           ;spi.c: 68: PIR1bits.SSP1IF = 0;
  3443  00154C  969E               	bcf	3998,3,c	;volatile
  3444                           
  3445                           ;spi.c: 70: i = SSP1BUF;
  3446  00154E  CFC9 F001          	movff	4041,SPIPut@i	;volatile
  3447  001552                     i2l147:
  3448                           
  3449                           ;spi.c: 73: {
  3450                           ;spi.c: 74: SSP1CON1bits.WCOL = 0;
  3451  001552  9EC6               	bcf	4038,7,c	;volatile
  3452                           
  3453                           ;spi.c: 75: SSP1BUF = v;
  3454  001554  C002  FFC9         	movff	SPIPut@v,4041	;volatile
  3455                           
  3456                           ;spi.c: 76: } while( SSP1CON1bits.WCOL );
  3457  001558  BEC6               	btfsc	4038,7,c	;volatile
  3458  00155A  D7FB               	goto	i2l147
  3459  00155C                     i2u518_40:
  3460                           
  3461                           ;spi.c: 78: while( PIR1bits.SSP1IF == 0 );
  3462  00155C  A69E               	btfss	3998,3,c	;volatile
  3463  00155E  D7FE               	goto	i2u518_40
  3464                           
  3465                           ;spi.c: 80: PIR1bits.SSP1IF = 0;
  3466  001560  969E               	bcf	3998,3,c	;volatile
  3467  001562  0012               	return		;funcret
  3468  001564                     __end_of_SPIPut:
  3469                           	opt stack 0
  3470                           pclatu	equ	0xFFB
  3471                           pclath	equ	0xFFA
  3472                           tblptru	equ	0xFF8
  3473                           tblptrh	equ	0xFF7
  3474                           tblptrl	equ	0xFF6
  3475                           tablat	equ	0xFF5
  3476                           prodh	equ	0xFF4
  3477                           prodl	equ	0xFF3
  3478                           intcon	equ	0xFF2
  3479                           intcon2	equ	0xFF1
  3480                           intcon3	equ	0xFF0
  3481                           postinc0	equ	0xFEE
  3482                           fsr0h	equ	0xFEA
  3483                           fsr0l	equ	0xFE9
  3484                           wreg	equ	0xFE8
  3485                           postdec1	equ	0xFE5
  3486                           fsr1h	equ	0xFE2
  3487                           fsr1l	equ	0xFE1
  3488                           indf2	equ	0xFDF
  3489                           fsr2h	equ	0xFDA
  3490                           fsr2l	equ	0xFD9
  3491                           status	equ	0xFD8
  3492                           pclatu	equ	0xFFB
  3493                           pclath	equ	0xFFA
  3494                           tblptru	equ	0xFF8
  3495                           tblptrh	equ	0xFF7
  3496                           tblptrl	equ	0xFF6
  3497                           tablat	equ	0xFF5
  3498                           prodh	equ	0xFF4
  3499                           prodl	equ	0xFF3
  3500                           intcon	equ	0xFF2
  3501                           intcon2	equ	0xFF1
  3502                           intcon3	equ	0xFF0
  3503                           postinc0	equ	0xFEE
  3504                           fsr0h	equ	0xFEA
  3505                           fsr0l	equ	0xFE9
  3506                           wreg	equ	0xFE8
  3507                           postdec1	equ	0xFE5
  3508                           fsr1h	equ	0xFE2
  3509                           fsr1l	equ	0xFE1
  3510                           indf2	equ	0xFDF
  3511                           fsr2h	equ	0xFDA
  3512                           fsr2l	equ	0xFD9
  3513                           status	equ	0xFD8
  3514                           
  3515                           	psect	rparam
  3516  0000                     pclatu	equ	0xFFB
  3517                           pclath	equ	0xFFA
  3518                           tblptru	equ	0xFF8
  3519                           tblptrh	equ	0xFF7
  3520                           tblptrl	equ	0xFF6
  3521                           tablat	equ	0xFF5
  3522                           prodh	equ	0xFF4
  3523                           prodl	equ	0xFF3
  3524                           intcon	equ	0xFF2
  3525                           intcon2	equ	0xFF1
  3526                           intcon3	equ	0xFF0
  3527                           postinc0	equ	0xFEE
  3528                           fsr0h	equ	0xFEA
  3529                           fsr0l	equ	0xFE9
  3530                           wreg	equ	0xFE8
  3531                           postdec1	equ	0xFE5
  3532                           fsr1h	equ	0xFE2
  3533                           fsr1l	equ	0xFE1
  3534                           indf2	equ	0xFDF
  3535                           fsr2h	equ	0xFDA
  3536                           fsr2l	equ	0xFD9
  3537                           status	equ	0xFD8
  3538                           
  3539                           	psect	temp
  3540  00005D                     btemp:
  3541                           	opt stack 0
  3542  00005D                     	ds	1
  3543  0000                     int$flags	set	btemp
  3544  0000                     wtemp6	set	btemp+1
  3545                           pclatu	equ	0xFFB
  3546                           pclath	equ	0xFFA
  3547                           tblptru	equ	0xFF8
  3548                           tblptrh	equ	0xFF7
  3549                           tblptrl	equ	0xFF6
  3550                           tablat	equ	0xFF5
  3551                           prodh	equ	0xFF4
  3552                           prodl	equ	0xFF3
  3553                           intcon	equ	0xFF2
  3554                           intcon2	equ	0xFF1
  3555                           intcon3	equ	0xFF0
  3556                           postinc0	equ	0xFEE
  3557                           fsr0h	equ	0xFEA
  3558                           fsr0l	equ	0xFE9
  3559                           wreg	equ	0xFE8
  3560                           postdec1	equ	0xFE5
  3561                           fsr1h	equ	0xFE2
  3562                           fsr1l	equ	0xFE1
  3563                           indf2	equ	0xFDF
  3564                           fsr2h	equ	0xFDA
  3565                           fsr2l	equ	0xFD9
  3566                           status	equ	0xFD8


Data Sizes:
    Strings     79
    Constant    90
    Data        11
    BSS         638
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     46      92
    BANK0           160     18     157
    BANK1           256      0     164
    BANK2           256      0     160
    BANK3           256      0     140
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          192      0       0

Pointer List with Targets:

    _uartPrint@str	PTR unsigned char  size(2) Largest target is 6
		 -> STR_4(CODE[5]), STR_3(CODE[6]), 

    initValue.PAddress	PTR unsigned char  size(2) Largest target is 8
		 -> myLongAddress(BANK1[8]), 

    transParam.DestAddress	PTR unsigned char  size(2) Largest target is 91
		 -> NULL(NULL[0]), ConnectionTable(BANK1[91]), tempShortAddress(COMRAM[2]), openSocketInfo(BANK0[26]), 
		 -> MiWiTasks@sourceShortAddress(COMRAM[2]), MiWiTasks@destShortAddress(COMRAM[2]), 

    MACInitParams.PAddress	PTR unsigned char  size(2) Largest target is 8
		 -> myLongAddress(BANK1[8]), 

    S1569$PAddress	PTR unsigned char  size(2) Largest target is 8
		 -> myLongAddress(BANK1[8]), 

    MIP.PAddress	PTR unsigned char  size(2) Largest target is 8
		 -> myLongAddress(BANK1[8]), 

    S1475$Payload	PTR unsigned char  size(2) Largest target is 160
		 -> RxBuffer(BANK2[160]), 

    MACRxPacket.Payload	PTR unsigned char  size(2) Largest target is 160
		 -> RxBuffer.Payload(BANK2[79]), RxBuffer(BANK2[160]), 

    S1475$SourceAddress	PTR unsigned char  size(2) Largest target is 160
		 -> RxBuffer(BANK2[160]), 

    MACRxPacket.SourceAddress	PTR unsigned char  size(2) Largest target is 160
		 -> RxBuffer.Payload(BANK2[79]), RxBuffer(BANK2[160]), 

    S1458$DestAddress	PTR unsigned char  size(2) Largest target is 91
		 -> NULL(NULL[0]), ConnectionTable(BANK1[91]), tempShortAddress(COMRAM[2]), openSocketInfo(BANK0[26]), 
		 -> MiWiTasks@sourceShortAddress(COMRAM[2]), MiWiTasks@destShortAddress(COMRAM[2]), 

    MTP.DestAddress	PTR unsigned char  size(2) Largest target is 91
		 -> NULL(NULL[0]), ConnectionTable.AltAddress(BANK1[2]), ConnectionTable(BANK1[91]), tempShortAddress(COMRAM[2]), 
		 -> openSocketInfo.ShortAddress1(BANK0[2]), openSocketInfo(BANK0[26]), MiWiTasks@sourceShortAddress(COMRAM[2]), MiWiTasks@destShortAddress(COMRAM[2]), 

    S1368$Payload	PTR unsigned char  size(2) Largest target is 160
		 -> RxBuffer(BANK2[160]), 

    rxMessage.Payload	PTR unsigned char  size(2) Largest target is 160
		 -> RxBuffer.Payload(BANK2[79]), RxBuffer(BANK2[160]), 

    S1368$SourceAddress	PTR unsigned char  size(2) Largest target is 160
		 -> RxBuffer(BANK2[160]), 

    rxMessage.SourceAddress	PTR unsigned char  size(2) Largest target is 160
		 -> RxBuffer.Payload(BANK2[79]), RxBuffer(BANK2[160]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    _UserInterruptHandler->i2_DELAY_ms
    _I2CTask->i2_DELAY_ms
    i2_DELAY_ms->i2___lmul
    _PHYSetShortRAMAddr->_SPIPut
    _PHYGetShortRAMAddr->_SPIPut
    _PHYGetLongRAMAddr->_SPIPut
    _SPIGet->_SPIPut

Critical Paths under _main in BANK0

    _uartRead->_uartWrite
    __uartPrint->_uartWrite
    _LCD_Initialize->_DELAY_ms
    _DELAY_ms->___lmul

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _high_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _high_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _high_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _high_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _high_isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _high_isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _high_isr in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2949
                  _SYSTEM_Initialize
                         __uartPrint
                     _uartInitialize
                           _uartRead
 ---------------------------------------------------------------------------------
 (1) _uartRead                                             1     1      0     134
                                              1 BANK0      1     1      0
                          _uartWrite
                _vT100EraseEndOfLine
 ---------------------------------------------------------------------------------
 (2) _vT100EraseEndOfLine                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _uartInitialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) __uartPrint                                           6     4      2     369
                                              1 BANK0      6     4      2
                          _uartWrite
 ---------------------------------------------------------------------------------
 (2) _uartWrite                                            1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    2446
                     _LCD_Initialize
 ---------------------------------------------------------------------------------
 (2) _LCD_Initialize                                       0     0      0    2446
                           _DELAY_ms
                           _I2CWrite
 ---------------------------------------------------------------------------------
 (3) _I2CWrite                                             2     1      1     686
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (3) _DELAY_ms                                             6     4      2    1760
                                             12 BANK0      6     4      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8     720
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _high_isr                                            28    28      0    3865
                                             18 COMRAM    28    28      0
                  _PHYGetLongRAMAddr
                 _PHYGetShortRAMAddr
                 _PHYSetShortRAMAddr
               _UserInterruptHandler
 ---------------------------------------------------------------------------------
 (6) _UserInterruptHandler                                 0     0      0     584
                            _I2CTask
                         i2_DELAY_ms
 ---------------------------------------------------------------------------------
 (7) _I2CTask                                              0     0      0     292
                         i2_DELAY_ms
 ---------------------------------------------------------------------------------
 (7) i2_DELAY_ms                                           6     4      2     292
                                             12 COMRAM     6     4      2
                           i2___lmul
 ---------------------------------------------------------------------------------
 (8) i2___lmul                                            12     4      8     144
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (6) _PHYSetShortRAMAddr                                   3     2      1    2404
                                              2 COMRAM     3     2      1
                             _SPIPut
 ---------------------------------------------------------------------------------
 (6) _PHYGetShortRAMAddr                                   3     3      0     114
                                              2 COMRAM     3     3      0
                             _SPIGet
                             _SPIPut
 ---------------------------------------------------------------------------------
 (6) _PHYGetLongRAMAddr                                    6     4      2     403
                                              2 COMRAM     6     4      2
                             _SPIGet
                             _SPIPut
 ---------------------------------------------------------------------------------
 (7) _SPIGet                                               0     0      0      23
                             _SPIPut
 ---------------------------------------------------------------------------------
 (7) _SPIPut                                               2     2      0      23
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _LCD_Initialize
       _DELAY_ms
         ___lmul
       _I2CWrite
   __uartPrint
     _uartWrite
   _uartInitialize
   _uartRead
     _uartWrite
     _vT100EraseEndOfLine

 _high_isr (ROOT)
   _PHYGetLongRAMAddr
     _SPIGet
       _SPIPut
     _SPIPut
   _PHYGetShortRAMAddr
     _SPIGet
       _SPIPut
     _SPIPut
   _PHYSetShortRAMAddr
     _SPIPut
   _UserInterruptHandler
     _I2CTask
       i2_DELAY_ms
         i2___lmul
     i2_DELAY_ms
       i2___lmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EBF      0       0      35        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0      8C      12       54.7%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0      A0      10       62.5%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0      A4       8       64.1%
BITBANK14           C0      0       0      33        0.0%
BANK14              C0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     12      9D       5       98.1%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2E      5C       1       97.9%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     2C9       6        0.0%
DATA                 0      0     2C9       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Thu Sep 19 15:25:48 2019

                        _LCD_Initialize 1296                            _RoutingTable 0072  
                                    l43 116E                                      l44 115A  
                     _ActiveScanResults 0300                                     _MTP 003A  
           __size_of_PHYSetShortRAMAddr 0028                         __end_of_I2CTask 105C  
                                   prod 000FF3                                     wreg 000FE8  
                            _TXSTA2bits 000FA8                             ?i2_DELAY_ms 000D  
                                  l1104 143C                                    l1105 141A  
                                  l1054 14A4                                    l1092 1464  
                                  l1276 1320                                    l1277 1334  
                                  l8807 1532                                    l8855 1580  
                                  STR_1 0F8E                                    STR_2 0F7D  
                                  STR_3 0F9F                                    STR_4 0FA5  
                                  STR_5 0F5B                                    STR_6 0F6C  
                                  _LATA 000F89                                    _LATB 000F8A  
                                  _LATD 000F8C                                    _LATE 000F8D  
                                  i2l43 11FA                                    i2l44 11E8  
                                  i2l90 0FFC                                    i2l94 102E  
                                  _main 148E                                    _role 0044  
                                  fsr0h 000FEA                                    fsr1h 000FE2  
                                  fsr2h 000FDA                                    fsr0l 000FE9  
                                  indf2 000FDF                                    fsr1l 000FE1  
                                  fsr2l 000FD9                                    btemp 005D  
                      __end_of_I2CWrite 154A                                    prodh 000FF4  
                                  prodl 000FF3                                    start 0212  
                      __end_of_DELAY_ms 1182                  __end_of_LCD_Initialize 130E  
                          ___param_bank 000000                       _PHYGetLongRAMAddr 13BC  
                    ?_PHYGetLongRAMAddr 0003                           __CFG_PLLDIV$2 000000  
                          _BAUDCON1bits 000F7E             __end_of_vT100EraseEndOfLine 15A0  
                                 ?_main 0001                                   _T1CON 000FCD  
                                 i2l147 1552                     ??_PHYGetLongRAMAddr 0005  
                                 _TMR1H 000FCF                                   _TMR0L 000FD6  
                                 _TMR1L 000FCE                                   _TRISA 000F92  
                                 _TRISB 000F93                                   _TRISC 000F94  
                                 _TRISD 000F95                                   _TRISE 000F96  
                            _CommandLen 004F                              _CommandPtr 004D  
                   ___lmul@multiplicand 00EE                              _MiWiSeqNum 0045  
                        _myShortAddress 0056              __end_of_PHYGetShortRAMAddr 14E6  
                       __end_of_dpowers 0F53                                   pclath 000FFA  
                                 tablat 000FF5                        __end_ofi2___lmul 13BC  
                                 status 000FD8                                   wtemp6 005E  
             __end_of_PHYGetLongRAMAddr 140E                         ?_LCD_Initialize 0001  
                       __initialization 105C                            __end_of_main 14BC  
                   __size_ofi2_DELAY_ms 008C                           high_isr@flags 002B  
                     _MACCurrentChannel 0095               PHYGetShortRAMAddr@address 0003  
                             ??_I2CTask 0013                          __CFG_OSC$HSPLL 000000  
                      __end_of_ScanTime 0F3D                                  ??_main 00FC  
                         __activetblptr 000002               PHYGetShortRAMAddr@tmpRFIE 0005  
             PHYSetShortRAMAddr@address 0004                                  _EECON2 000FA7  
                                _ANCON0 000F48                                  _ANCON1 000F49  
                                i2l1030 013C                                  i2l1022 0088  
                                i2l1031 0108                                  i2l1033 018A  
                                i2l1025 009A                                  i2l1034 01A0  
                                i2l1035 01AE                                  i2l1027 00B6  
                                i2l1028 0196                                  i2l1029 0180  
                                i2l1038 01C2                                  i2l1276 1376  
                                i2l1277 138A                          __CFG_WDTEN$OFF 000000  
                                _INTCON 000FF2                                  i2l8619 0092  
                                _RCREG2 000FAA                                  _RCSTA2 000F9C  
                                _OSCCON 000FD3                                  _SPBRG2 000FAB  
                      i2___lmul@product 0009                                  _RPINR1 000EE7  
                                _RPOR17 000ED7                                  _SPIGet 158A  
                                _SPIPut 154A                                  _TXREG2 000FA9  
             PHYSetShortRAMAddr@tmpRFIE 0005                                  _TXSTA2 000FA8  
         __size_of_UserInterruptHandler 0018                            i2DELAY_ms@ms 000D  
                        __CFG_XINST$OFF 000000                                  _TxData 0047  
                      __end_of_high_isr 0212                                  ___lmul 130E  
                                clear_0 10AC                                  clear_1 10B8  
                                clear_2 10C4                                  clear_3 10D0  
                                clear_4 10DC                            __pdataCOMRAM 005B  
                      __end_of_uartRead 148E                          _openSocketInfo 00CE  
                             ?_I2CWrite 00EA                            __mediumconst 0000  
                                tblptrh 000FF7                                  tblptrl 000FF6  
                                tblptru 000FF8                               ?_DELAY_ms 00F6  
                     _SYSTEM_Initialize 120E                              __accesstop 0060  
               __end_of__initialization 10E2                      ?_SYSTEM_Initialize 0001  
                         ___rparam_used 000001              __size_of_PHYGetLongRAMAddr 0052  
                 _ActiveScanResultIndex 0049                          __pcstackCOMRAM 0001  
                        high_isr@RxBank 002D                            __pidataBANK0 15A0  
                          __pidataBANK1 1594                     ??_SYSTEM_Initialize 00FC  
                             ?i2___lmul 0001                         _ConnectionTable 0120  
                            ??_I2CWrite 00EB                            ??i2_DELAY_ms 000F  
                            ??_DELAY_ms 00F8                 __size_of_uartInitialize 0020  
             __end_of_SYSTEM_Initialize 1296                              __pbssBANK0 0060  
                            __pbssBANK1 0100                              __pbssBANK2 0200  
                            __pbssBANK3 0300                                 ?_SPIGet 0001  
                               ?_SPIPut 0001              PHYGetShortRAMAddr@toReturn 0004  
                    I2CWrite@Commandlen 00EB                                 ?___lmul 00EA  
                    __end_ofi2_DELAY_ms 120E                              __uartPrint 140E  
                               _I2CTask 0FAC                          ___lmul@product 00F2  
                               SPIPut@i 0001                                 SPIPut@v 0002  
            __end_of_PHYSetShortRAMAddr 150E                              ??i2___lmul 0009  
                    __size_of_uartWrite 000E                                 _LCDText 017B  
                               _SPBRGH2 000F7D                                 _RPINR16 000EF6  
                        _failureCounter 0091                                 _SSP2ADD 000F74  
                               _SSP1BUF 000FC9                                 _SSP2BUF 000F75  
                             ?_high_isr 0001                            __uartPrint@i 00EF  
                      ??_LCD_Initialize 00FC                         _timerExtension1 004B  
                       _timerExtension2 009A                         __size_of_SPIGet 000A  
                       __size_of_SPIPut 001A                      _PHYGetShortRAMAddr 14BC  
                            DELAY_ms@ms 00F6                     _AcknowledgementAddr 0093  
                               __Hparam 0000                                 __Lparam 0000  
                             ?_uartRead 0001                                 _TextLen 004E  
                               _TextPtr 004C                         __size_of___lmul 0058  
                   ?_PHYGetShortRAMAddr 0001                            __psmallconst 0F00  
                        _tempNodeStatus 0048                                 __pcinit 105C  
                               __ramtop 0F00                                 __ptext0 148E  
                               __ptext1 145C                                 __ptext2 159E  
                               __ptext3 150E                                 __ptext4 140E  
                               __ptext5 157C                                 __ptext6 120E  
                               __ptext7 1296                                 __ptext8 152E  
                               __ptext9 10F0                                 _myPANID 0054  
                     __end_of_hexpowers 0F5B                               _T1CONbits 000FCD  
                               _dpowers 0F49                           _myLongAddress 019C  
                             _MAC_PANID 0052            __size_of_vT100EraseEndOfLine 0002  
                           uartRead@val 00EB                    ??_PHYGetShortRAMAddr 0003  
            __size_of_SYSTEM_Initialize 0088                              ??_high_isr 0013  
                  end_of_initialization 10E2                        _MiWiStateMachine 0041  
                     __end_of_octpowers 0F49                           __Lmediumconst 0000  
                     __end_of_uartWrite 158A                              ??_uartRead 00EB  
                               postdec1 000FE5                                 postinc0 000FEE  
                   i2___lmul@multiplier 0001  i2DELAY_ms@cyclesRequiredForEntireDelay 000F  
  DELAY_ms@cyclesRequiredForEntireDelay 00F8                             ?__uartPrint 00EB  
                             _PORTBbits 000F81            __end_of_UserInterruptHandler 157C  
                             _TRISAbits 000F92                               _TRISBbits 000F93  
                             _TRISCbits 000F94                               _TRISDbits 000F95  
                        _uartInitialize 150E                       __size_of_I2CWrite 001C  
                             _BankIndex 005B                       __size_of_DELAY_ms 0092  
                        __uartPrint@str 00EB                          __end_of_SPIGet 1594  
                        __end_of_SPIPut 1564                          __end_of___lmul 1366  
              PHYGetLongRAMAddr@address 0003                           __pidataCOMRAM 159C  
                __end_of_uartInitialize 152E                     start_initialization 105C  
                     __size_ofi2___lmul 0056                PHYGetLongRAMAddr@tmpRFIE 0008  
                   __size_of__uartPrint 004E                         high_isr@results 002A  
                              ??_SPIGet 0003                                ??_SPIPut 0001  
                        _currentChannel 005A                                ??___lmul 00F2  
                           __pdataBANK0 00FC                             __pdataBANK1 019C  
                              ?_I2CTask 0001                             __pbssCOMRAM 002F  
                       ?_uartInitialize 0001                           __pcstackBANK0 00EA  
                           _defaultHops 005C                      _PHYSetShortRAMAddr 14E6  
               PHYSetShortRAMAddr@value 0003                       __size_of_high_isr 020A  
                   ?_PHYSetShortRAMAddr 0003                    _UserInterruptHandler 1564  
                     I2CWrite@BufferLen 00EA                        _MiWiCapacityInfo 0099  
                   _vT100EraseEndOfLine 159E                               __pintcode 0008  
                     __size_of_uartRead 0032                    ??_PHYSetShortRAMAddr 0004  
                           __smallconst 0F00                                _I2CWrite 152E  
                    _AcknowledgementSeq 00FC                    ?_vT100EraseEndOfLine 0001  
                              _DELAY_ms 10F0                               _hexpowers 0F53  
                              _LATBbits 000F8A                                _LATCbits 000F8B  
                              _LATDbits 000F8C                               _tempPANID 00E8  
                 ?_UserInterruptHandler 0001                               _octpowers 0F3D  
                              _PIE1bits 000F9D                                _PIE3bits 000FA3  
             PHYGetLongRAMAddr@toReturn 0007                                _PIR1bits 000F9E  
                              _PIR3bits 000FA4                                i2u701_45 150A  
                              i2u701_46 150C                                i2u518_40 155C  
                              i2u702_45 14E0                                i2u702_46 14E2  
                              i2u535_40 0FBC                                i2u703_45 1408  
                              i2u703_46 140A                               _rxMessage 0060  
                              i2u952_40 00BA                              uartWrite@c 00EA  
                             _uartWrite 157C                                _SSP1CON1 000FC6  
                              _SSP2CON1 000F72                                _SSP2CON2 000F71  
                              _SSP1STAT 000FC7                                _SSP2STAT 000F73  
                          ??__uartPrint 00ED                             _MACRxPacket 002F  
                      __size_of_I2CTask 00B0                                i2___lmul 1366  
                             high_isr@i 002E                   ??_vT100EraseEndOfLine 00EA  
                       _MiWiAckRequired 0098                                _ConnMode 004A  
                     ___lmul@multiplier 00EA                             _INTCON2bits 000FF1  
                           _INTCON3bits 000FF0             __size_of_PHYGetShortRAMAddr 002A  
                             copy_data0 1070                      __end_of__uartPrint 145C  
                              _ScanTime 0F01                                _RxBuffer 0200  
                              __Hrparam 0000                                _TxBuffer 009B  
                              __Lrparam 0000                              ?_uartWrite 0001  
               __size_of_LCD_Initialize 0078                         _tempLongAddress 007A  
                            _IEEESeqNum 0096                                __ptext10 130E  
                              __ptext20 154A                                __ptext12 1564  
                              __ptext13 0FAC                                __ptext14 1182  
                              __ptext15 1366                                __ptext16 14E6  
                              __ptext17 14BC                                __ptext18 13BC  
                              __ptext19 158A                        _switch0PressTime 008A  
                          _SSP1CON1bits 000FC6                                _high_isr 0008  
                          _SSP2CON1bits 000F72                            _SSP2CON2bits 000F71  
                      _switch1PressTime 0086                  ??_UserInterruptHandler 0013  
                         __size_of_main 002E                                _myParent 0046  
                            _LCDCommand 0082                                _uartRead 145C  
                      _tempShortAddress 0058                                int$flags 005D  
                      ??_uartInitialize 00EA                   __CFG_CPUDIV$OSC3_PLL3 000000  
                           _OSCTUNEbits 000F9B                              _INTCONbits 000FF2  
                 i2___lmul@multiplicand 0005                              i2_DELAY_ms 1182  
                      _myNetworkAddress 0050                                intlevel2 0000  
                            _RCSTA1bits 000FAC                              _RCSTA2bits 000F9C  
                           ??_uartWrite 00EA                           _MACInitParams 008E  
                        _MRF24J40Status 0043                        _BroadcastRecords 0100  
                            _PPSCONbits 000EFF                              _WDTCONbits 000FC0  
                     _knownCoordinators 0097                          _RouterFailures 006A  
